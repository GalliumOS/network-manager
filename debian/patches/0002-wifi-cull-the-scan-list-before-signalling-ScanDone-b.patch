From ae6df9e3a98f67c8965d6e62e16abfc3d2550f90 Mon Sep 17 00:00:00 2001
From: Thomas Voss <thomas.voss@canonical.com>
Date: Tue, 11 Nov 2014 12:04:42 -0500
Subject: [PATCH 2/2] wifi: cull the scan list before signalling ScanDone (bug
 737414)

The scan list should get cleaned up at the end of the scan, but before
signalling that the scan is done (and before scheduling a new scan), so
that when SCAN_DONE is received by applications, the scan list properly
reflects the result of the scan, and don't retain some old APs.

Signed-off-by: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
---
 src/devices/wifi/nm-device-wifi.c |   35 +++++++++++++++++++++++++++++------
 1 file changed, 29 insertions(+), 6 deletions(-)

Index: network-manager-1.0.4/src/devices/wifi/nm-device-wifi.c
===================================================================
--- network-manager-1.0.4.orig/src/devices/wifi/nm-device-wifi.c
+++ network-manager-1.0.4/src/devices/wifi/nm-device-wifi.c
@@ -123,7 +123,6 @@ struct _NMDeviceWifiPrivate {
 	gint32            scheduled_scan_time;
 	guint8            scan_interval; /* seconds */
 	guint             pending_scan_id;
-	guint             scanlist_cull_id;
 	gboolean          requested_scan;
 
 	NMSupplicantManager   *sup_mgr;
@@ -160,11 +159,6 @@ static void supplicant_iface_new_bss_cb
                                          GVariant *properties,
                                          NMDeviceWifi * self);
 
-static void supplicant_iface_bss_updated_cb (NMSupplicantInterface *iface,
-                                             const char *object_path,
-                                             GHashTable *properties,
-                                             NMDeviceWifi *self);
-
 static void supplicant_iface_bss_removed_cb (NMSupplicantInterface *iface,
                                              const char *object_path,
                                              NMDeviceWifi *self);
@@ -177,7 +171,7 @@ static void supplicant_iface_notify_scan
                                                  GParamSpec * pspec,
                                                  NMDeviceWifi * self);
 
-static void schedule_scanlist_cull (NMDeviceWifi *self);
+static gboolean cull_scan_list(NMDeviceWifi *self);
 
 static gboolean request_wireless_scan (gpointer user_data);
 
@@ -252,10 +246,6 @@ supplicant_interface_acquire (NMDeviceWi
 	                  G_CALLBACK (supplicant_iface_new_bss_cb),
 	                  self);
 	g_signal_connect (priv->sup_iface,
-	                  NM_SUPPLICANT_INTERFACE_BSS_UPDATED,
-	                  G_CALLBACK (supplicant_iface_bss_updated_cb),
-	                  self);
-	g_signal_connect (priv->sup_iface,
 	                  NM_SUPPLICANT_INTERFACE_BSS_REMOVED,
 	                  G_CALLBACK (supplicant_iface_bss_removed_cb),
 	                  self);
@@ -287,11 +277,6 @@ supplicant_interface_release (NMDeviceWi
 	_LOGD (LOGD_WIFI_SCAN, "reset scanning interval to %d seconds",
 	       priv->scan_interval);
 
-	if (priv->scanlist_cull_id) {
-		g_source_remove (priv->scanlist_cull_id);
-		priv->scanlist_cull_id = 0;
-	}
-
 	if (priv->sup_iface) {
 		remove_supplicant_interface_error_handler (self);
 
@@ -1607,14 +1592,17 @@ supplicant_iface_scan_done_cb (NMSupplic
 
 	_LOGD (LOGD_WIFI_SCAN, "scan %s", success ? "successful" : "failed");
 
-	g_signal_emit (self, signals[SCAN_DONE], 0, NULL);
-
-	schedule_scan (self, success);
-
 	/* Ensure that old APs get removed, which otherwise only
 	 * happens when there are new BSSes.
 	 */
-	schedule_scanlist_cull (self);
+	cull_scan_list (self);
+
+	/* And let listeners know that a scan is done, with
+	 * all last-seen timestamps being updated.
+	 */
+	g_signal_emit (self, signals[SCAN_DONE], 0, NULL);
+
+	schedule_scan (self, success);
 
 	if (priv->requested_scan) {
 		priv->requested_scan = FALSE;
@@ -1761,8 +1749,6 @@ cull_scan_list (NMDeviceWifi *self)
 	GSList *elt;
 	guint32 removed = 0, total = 0;
 
-	priv->scanlist_cull_id = 0;
-
 	_LOGD (LOGD_WIFI_SCAN, "checking scan list for outdated APs");
 
 	/* Walk the access point list and remove any access points older than
@@ -1786,8 +1772,10 @@ cull_scan_list (NMDeviceWifi *self)
 		 * supplicant in the last scan.
 		 */
 		if (   nm_ap_get_supplicant_path (ap)
-		    && g_object_get_data (G_OBJECT (ap), WPAS_REMOVED_TAG) == NULL)
+		    && g_object_get_data (G_OBJECT (ap), WPAS_REMOVED_TAG) == NULL) {
+			nm_ap_update_last_seen (ap);
 			continue;
+		}
 
 		last_seen = nm_ap_get_last_seen (ap);
 		if (!last_seen || last_seen + prune_interval_s < boottime_now)
@@ -1824,17 +1812,6 @@ cull_scan_list (NMDeviceWifi *self)
 }
 
 static void
-schedule_scanlist_cull (NMDeviceWifi *self)
-{
-	NMDeviceWifiPrivate *priv = NM_DEVICE_WIFI_GET_PRIVATE (self);
-
-	/* Cull the scan list after the last request for it has come in */
-	if (priv->scanlist_cull_id)
-		g_source_remove (priv->scanlist_cull_id);
-	priv->scanlist_cull_id = g_timeout_add_seconds (4, (GSourceFunc) cull_scan_list, self);
-}
-
-static void
 supplicant_iface_new_bss_cb (NMSupplicantInterface *iface,
                              const char *object_path,
                              GVariant *properties,
@@ -1863,36 +1840,6 @@ supplicant_iface_new_bss_cb (NMSupplican
 		g_object_unref (ap);
 	} else
 		_LOGW (LOGD_WIFI_SCAN, "invalid AP properties received");
-
-	/* Remove outdated access points */
-	schedule_scanlist_cull (self);
-}
-
-static void
-supplicant_iface_bss_updated_cb (NMSupplicantInterface *iface,
-                                 const char *object_path,
-                                 GHashTable *properties,
-                                 NMDeviceWifi *self)
-{
-	NMDeviceState state;
-	NMAccessPoint *ap;
-
-	g_return_if_fail (self != NULL);
-	g_return_if_fail (object_path != NULL);
-	g_return_if_fail (properties != NULL);
-
-	/* Ignore new APs when unavailable or unamnaged */
-	state = nm_device_get_state (NM_DEVICE (self));
-	if (state <= NM_DEVICE_STATE_UNAVAILABLE)
-		return;
-
-	/* Update the AP's last-seen property */
-	ap = get_ap_by_supplicant_path (self, object_path);
-	if (ap)
-		nm_ap_update_last_seen (ap);
-
-	/* Remove outdated access points */
-	schedule_scanlist_cull (self);
 }
 
 static void
