<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<refentry id="nm-settings"><refentryinfo><title>nm-settings</title><author>NetworkManager developers</author></refentryinfo><refmeta><refentrytitle>nm-settings</refentrytitle><manvolnum>5</manvolnum><refmiscinfo class="source">NetworkManager</refmiscinfo><refmiscinfo class="manual">Configuration</refmiscinfo><refmiscinfo class="version">1.10.6</refmiscinfo></refmeta><refnamediv><refname>nm-settings</refname><refpurpose>Description of settings and properties of NetworkManager connection profiles</refpurpose></refnamediv><refsect1 id="description"><title>Description</title><para>
          NetworkManager is based on a concept of connection profiles, sometimes referred to as
          connections only. These connection profiles contain a network configuration. When
          NetworkManager activates a connection profile on a network device the configuration will
          be applied and an active network connection will be established. Users are free to create
          as many connection profiles as they see fit. Thus they are flexible in having various network
          configurations for different networking needs. The connection profiles are handled by
          NetworkManager via <emphasis>settings service</emphasis> and are exported on D-Bus
          (<emphasis>/org/freedesktop/NetworkManager/Settings/&lt;num&gt;</emphasis> objects).
          The conceptual objects can be described as follows:
          <variablelist><varlistentry><term>Connection (profile)</term><listitem><para>
                  A specific, encapsulated, independent group of settings describing
                  all the configuration required to connect to a specific network.
                  It is referred to by a unique identifier called the UUID. A connection
                  is tied to a one specific device type, but not necessarily a specific
                  hardware device. It is composed of one or more <emphasis>Settings</emphasis>
                  objects.
                </para></listitem></varlistentry></variablelist><variablelist><varlistentry><term>Setting</term><listitem><para>
                  A group of related key/value pairs describing a specific piece of a
                  <emphasis>Connection (profile)</emphasis>. Settings keys and allowed values are
                  described in the tables below. Keys are also referred to as properties.
                  Developers can find the setting objects and their properties in the libnm-core
                  sources. Look for the <function>*_class_init</function> functions near the bottom
                  of each setting source file.
                </para></listitem></varlistentry></variablelist><variablelist><para>
              The settings and properties shown in tables below list all available connection
              configuration options. However, note that not all settings are applicable to all
              connection types. NetworkManager provides a command-line tool <emphasis>nmcli</emphasis>
              that allows direct configuration of the settings and properties according to a connection
              profile type. <emphasis>nmcli</emphasis> connection editor has also a built-in
              <emphasis>describe</emphasis> command that can display description of particular settings
              and properties of this page.
            </para></variablelist></para>
  <refsect2><title>connection setting</title><para>General Connection Profile Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.connection.auth-retries">auth-retries</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>The number of retries for the authentication. Zero means to try indefinitely; -1 means to use a global default. If the global default is not set, the authentication retries for 3 times before failing the connection. Currently this only applies to 802-1x authentication.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.autoconnect">autoconnect</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Whether or not the connection should be automatically connected by NetworkManager when the resources for the connection are available. TRUE to automatically activate the connection, FALSE to require manual intervention to activate the connection.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.autoconnect-priority">autoconnect-priority</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>The autoconnect priority. If the connection is set to autoconnect, connections with higher priority will be preferred. Defaults to 0. The higher number means higher priority.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.autoconnect-retries">autoconnect-retries</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>The number of times a connection should be tried when autoactivating before giving up. Zero means forever, -1 means the global default (4 times if not overridden). Setting this to 1 means to try activation only once before blocking autoconnect. Note that after a timeout, NetworkManager will try to autoconnect again.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.autoconnect-slaves">autoconnect-slaves</entry><entry align="left">NMSettingConnectionAutoconnectSlaves (int32)</entry><entry align="left"/><entry>Whether or not slaves of this connection should be automatically brought up when NetworkManager activates this connection. This only has a real effect for master connections. The permitted values are: 0: leave slave connections untouched, 1: activate all the slave connections with this connection, -1: default. If -1 (default) is set, global connection.autoconnect-slaves is read to determine the real value. If it is default as well, this fallbacks to 0.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.gateway-ping-timeout">gateway-ping-timeout</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If greater than zero, delay success of IP addressing until either the timeout is reached, or an IP gateway replies to a ping.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.id">id</entry><entry align="left">string</entry><entry align="left"/><entry>A human readable unique identifier for the connection, like "Work Wi-Fi" or "T-Mobile 3G".</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.interface-name">interface-name</entry><entry align="left">string</entry><entry align="left"/><entry>The name of the network interface this connection is bound to. If not set, then the connection can be attached to any interface of the appropriate type (subject to restrictions imposed by other settings). For software devices this specifies the name of the created device. For connection types where interface names cannot easily be made persistent (e.g. mobile broadband or USB Ethernet), this property should not be used. Setting this property restricts the interfaces a connection can be used with, and if interface names change or are reordered the connection may be applied to the wrong interface.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.lldp">lldp</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Whether LLDP is enabled for the connection.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.master">master</entry><entry align="left">string</entry><entry align="left"/><entry>Interface name of the master device or UUID of the master connection.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.metered">metered</entry><entry align="left">NMMetered (int32)</entry><entry align="left"/><entry>Whether the connection is metered. When updating this property on a currently activated connection, the change takes effect immediately.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.name">name</entry><entry align="left">string</entry><entry align="left">connection</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.permissions">permissions</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>An array of strings defining what access a given user has to this connection.  If this is NULL or empty, all users are allowed to access this connection; otherwise users are allowed if and only if they are in this list.  When this is not empty, the connection can be active only when one of the specified users is logged into an active session.  Each entry is of the form "[type]:[id]:[reserved]"; for example, "user:dcbw:blah". At this time only the "user" [type] is allowed.  Any other values are ignored and reserved for future use.  [id] is the username that this permission refers to, which may not contain the ":" character. Any [reserved] information present must be ignored and is reserved for future use.  All of [type], [id], and [reserved] must be valid UTF-8.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.read-only">read-only</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>FALSE if the connection can be modified using the provided settings service's D-Bus interface with the right privileges, or TRUE if the connection is read-only and cannot be modified.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.secondaries">secondaries</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>List of connection UUIDs that should be activated when the base connection itself is activated. Currently only VPN connections are supported.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.slave-type">slave-type</entry><entry align="left">string</entry><entry align="left"/><entry>Setting name of the device type of this slave's master connection (eg, "bond"), or NULL if this connection is not a slave.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.stable-id">stable-id</entry><entry align="left">string</entry><entry align="left"/><entry>Token to generate stable IDs for the connection. The stable-id is used for generating IPv6 stable private addresses with ipv6.addr-gen-mode=stable-privacy. It is also used to seed the generated cloned MAC address for ethernet.cloned-mac-address=stable and wifi.cloned-mac-address=stable. Note that also the interface name of the activating connection and a per-host secret key is included into the address generation so that the same stable-id on different hosts/devices yields different addresses. If the value is unset, an ID unique for the connection is used. Specifying a stable-id allows multiple connections to generate the same addresses. Another use is to generate IDs at runtime via dynamic substitutions. The '$' character is treated special to perform dynamic substitutions at runtime. Currently supported are "${CONNECTION}", "${BOOT}", "${RANDOM}". These effectively create unique IDs per-connection, per-boot, or every time. Any unrecognized patterns following '$' are treated verbatim, however are reserved for future use. You are thus advised to avoid '$' or escape it as "$$". For example, set it to "${CONNECTION}/${BOOT}" to create a unique id for this connection that changes with every reboot. Note that two connections only use the same effective id if their stable-id is also identical before performing dynamic substitutions.</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.timestamp">timestamp</entry><entry align="left">uint64</entry><entry align="left">0</entry><entry>The time, in seconds since the Unix Epoch, that the connection was last _successfully_ fully activated. NetworkManager updates the connection timestamp periodically when the connection is active to ensure that an active connection has the latest timestamp. The property is only meant for reading (changes to this property will not be preserved).</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.type">type</entry><entry align="left">string</entry><entry align="left"/><entry>Base type of the connection. For hardware-dependent connections, should contain the setting name of the hardware-type specific setting (ie, "802-3-ethernet" or "802-11-wireless" or "bluetooth", etc), and for non-hardware dependent connections like VPN or otherwise, should contain the setting name of that setting type (ie, "vpn" or "bridge", etc).</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.uuid">uuid</entry><entry align="left">string</entry><entry align="left"/><entry>A universally unique identifier for the connection, for example generated with libuuid.  It should be assigned when the connection is created, and never changed as long as the connection still applies to the same network.  For example, it should not be changed when the "id" property or NMSettingIP4Config changes, but might need to be re-created when the Wi-Fi SSID, mobile broadband network provider, or "type" property changes. The UUID must be in the format "2815492f-7e56-435e-b2e9-246bd7cdc664" (ie, contains only hexadecimal characters and "-").</entry></row>
    <row><entry align="left" id="nm-settings.property.connection.zone">zone</entry><entry align="left">string</entry><entry align="left"/><entry>The trust level of a the connection.  Free form case-insensitive string (for example "Home", "Work", "Public").  NULL or unspecified zone means the connection will be placed in the default zone as defined by the firewall. When updating this property on a currently activated connection, the change takes effect immediately.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>802-1x setting</title><para>IEEE 802.1x Authentication Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.802-1x.altsubject-matches">altsubject-matches</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>List of strings to be matched against the altSubjectName of the certificate presented by the authentication server. If the list is empty, no verification of the server certificate's altSubjectName is performed.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.anonymous-identity">anonymous-identity</entry><entry align="left">string</entry><entry align="left"/><entry>Anonymous identity string for EAP authentication methods.  Used as the unencrypted identity with EAP types that support different tunneled identity like EAP-TTLS.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.auth-timeout">auth-timeout</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>A timeout for the authentication. Zero means the global default; if the global default is not set, the authentication timeout is 25 seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.ca-cert">ca-cert</entry><entry align="left">byte array</entry><entry align="left"/><entry>Contains the CA certificate if used by the EAP method specified in the "eap" property. Certificate data is specified using a "scheme"; two are currently supported: blob and path. When using the blob scheme (which is backwards compatible with NM 0.7.x) this property should be set to the certificate's DER encoded data. When using the path scheme, this property should be set to the full UTF-8 encoded path of the certificate, prefixed with the string "file://" and ending with a terminating NUL byte. This property can be unset even if the EAP method supports CA certificates, but this allows man-in-the-middle attacks and is NOT recommended.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.ca-cert-password">ca-cert-password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to access the CA certificate stored in "ca-cert" property. Only makes sense if the certificate is stored on a PKCS#11 token that requires a login.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.ca-cert-password-flags">ca-cert-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "ca-cert-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.ca-path">ca-path</entry><entry align="left">string</entry><entry align="left"/><entry>UTF-8 encoded path to a directory containing PEM or DER formatted certificates to be added to the verification chain in addition to the certificate specified in the "ca-cert" property.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.client-cert">client-cert</entry><entry align="left">byte array</entry><entry align="left"/><entry>Contains the client certificate if used by the EAP method specified in the "eap" property. Certificate data is specified using a "scheme"; two are currently supported: blob and path. When using the blob scheme (which is backwards compatible with NM 0.7.x) this property should be set to the certificate's DER encoded data. When using the path scheme, this property should be set to the full UTF-8 encoded path of the certificate, prefixed with the string "file://" and ending with a terminating NUL byte.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.client-cert-password">client-cert-password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to access the client certificate stored in "client-cert" property. Only makes sense if the certificate is stored on a PKCS#11 token that requires a login.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.client-cert-password-flags">client-cert-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "client-cert-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.domain-suffix-match">domain-suffix-match</entry><entry align="left">string</entry><entry align="left"/><entry>Constraint for server domain name. If set, this FQDN is used as a suffix match requirement for dNSName element(s) of the certificate presented by the authentication server.  If a matching dNSName is found, this constraint is met.  If no dNSName values are present, this constraint is matched against SubjectName CN using same suffix match comparison.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.eap">eap</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>The allowed EAP method to be used when authenticating to the network with 802.1x.  Valid methods are: "leap", "md5", "tls", "peap", "ttls", "pwd", and "fast".  Each method requires different configuration using the properties of this setting; refer to wpa_supplicant documentation for the allowed combinations.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.identity">identity</entry><entry align="left">string</entry><entry align="left"/><entry>Identity string for EAP authentication methods.  Often the user's user or login name.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.name">name</entry><entry align="left">string</entry><entry align="left">802-1x</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.pac-file">pac-file</entry><entry align="left">string</entry><entry align="left"/><entry>UTF-8 encoded file path containing PAC for EAP-FAST.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.password">password</entry><entry align="left">string</entry><entry align="left"/><entry>UTF-8 encoded password used for EAP authentication methods. If both the "password" property and the "password-raw" property are specified, "password" is preferred.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.password-flags">password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.password-raw">password-raw</entry><entry align="left">byte array</entry><entry align="left"/><entry>Password used for EAP authentication methods, given as a byte array to allow passwords in other encodings than UTF-8 to be used. If both the "password" property and the "password-raw" property are specified, "password" is preferred.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.password-raw-flags">password-raw-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "password-raw" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase1-auth-flags">phase1-auth-flags</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies authentication flags to use in "phase 1" outer authentication using NMSetting8021xAuthFlags options. The individual TLS versions can be explicitly disabled. If a certain TLS disable flag is not set, it is up to the supplicant to allow or forbid it. The TLS options map to tls_disable_tlsv1_x settings. See the wpa_supplicant documentation for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase1-fast-provisioning">phase1-fast-provisioning</entry><entry align="left">string</entry><entry align="left"/><entry>Enables or disables in-line provisioning of EAP-FAST credentials when FAST is specified as the EAP method in the "eap" property. Recognized values are "0" (disabled), "1" (allow unauthenticated provisioning), "2" (allow authenticated provisioning), and "3" (allow both authenticated and unauthenticated provisioning).  See the wpa_supplicant documentation for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase1-peaplabel">phase1-peaplabel</entry><entry align="left">string</entry><entry align="left"/><entry>Forces use of the new PEAP label during key derivation.  Some RADIUS servers may require forcing the new PEAP label to interoperate with PEAPv1.  Set to "1" to force use of the new PEAP label.  See the wpa_supplicant documentation for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase1-peapver">phase1-peapver</entry><entry align="left">string</entry><entry align="left"/><entry>Forces which PEAP version is used when PEAP is set as the EAP method in the "eap" property.  When unset, the version reported by the server will be used.  Sometimes when using older RADIUS servers, it is necessary to force the client to use a particular PEAP version.  To do so, this property may be set to "0" or "1" to force that specific PEAP version.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-altsubject-matches">phase2-altsubject-matches</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>List of strings to be matched against the altSubjectName of the certificate presented by the authentication server during the inner "phase 2" authentication. If the list is empty, no verification of the server certificate's altSubjectName is performed.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-auth">phase2-auth</entry><entry align="left">string</entry><entry align="left"/><entry>Specifies the allowed "phase 2" inner non-EAP authentication methods when an EAP method that uses an inner TLS tunnel is specified in the "eap" property.  Recognized non-EAP "phase 2" methods are "pap", "chap", "mschap", "mschapv2", "gtc", "otp", "md5", and "tls". Each "phase 2" inner method requires specific parameters for successful authentication; see the wpa_supplicant documentation for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-autheap">phase2-autheap</entry><entry align="left">string</entry><entry align="left"/><entry>Specifies the allowed "phase 2" inner EAP-based authentication methods when an EAP method that uses an inner TLS tunnel is specified in the "eap" property.  Recognized EAP-based "phase 2" methods are "md5", "mschapv2", "otp", "gtc", and "tls". Each "phase 2" inner method requires specific parameters for successful authentication; see the wpa_supplicant documentation for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-ca-cert">phase2-ca-cert</entry><entry align="left">byte array</entry><entry align="left"/><entry>Contains the "phase 2" CA certificate if used by the EAP method specified in the "phase2-auth" or "phase2-autheap" properties. Certificate data is specified using a "scheme"; two are currently supported: blob and path. When using the blob scheme (which is backwards compatible with NM 0.7.x) this property should be set to the certificate's DER encoded data. When using the path scheme, this property should be set to the full UTF-8 encoded path of the certificate, prefixed with the string "file://" and ending with a terminating NUL byte. This property can be unset even if the EAP method supports CA certificates, but this allows man-in-the-middle attacks and is NOT recommended.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-ca-cert-password">phase2-ca-cert-password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to access the "phase2" CA certificate stored in "phase2-ca-cert" property. Only makes sense if the certificate is stored on a PKCS#11 token that requires a login.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-ca-cert-password-flags">phase2-ca-cert-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "phase2-ca-cert-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-ca-path">phase2-ca-path</entry><entry align="left">string</entry><entry align="left"/><entry>UTF-8 encoded path to a directory containing PEM or DER formatted certificates to be added to the verification chain in addition to the certificate specified in the "phase2-ca-cert" property.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-client-cert">phase2-client-cert</entry><entry align="left">byte array</entry><entry align="left"/><entry>Contains the "phase 2" client certificate if used by the EAP method specified in the "phase2-auth" or "phase2-autheap" properties. Certificate data is specified using a "scheme"; two are currently supported: blob and path. When using the blob scheme (which is backwards compatible with NM 0.7.x) this property should be set to the certificate's DER encoded data. When using the path scheme, this property should be set to the full UTF-8 encoded path of the certificate, prefixed with the string "file://" and ending with a terminating NUL byte. This property can be unset even if the EAP method supports CA certificates, but this allows man-in-the-middle attacks and is NOT recommended.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-client-cert-password">phase2-client-cert-password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to access the "phase2" client certificate stored in "phase2-client-cert" property. Only makes sense if the certificate is stored on a PKCS#11 token that requires a login.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-client-cert-password-flags">phase2-client-cert-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "phase2-client-cert-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-domain-suffix-match">phase2-domain-suffix-match</entry><entry align="left">string</entry><entry align="left"/><entry>Constraint for server domain name. If set, this FQDN is used as a suffix match requirement for dNSName element(s) of the certificate presented by the authentication server during the inner "phase 2" authentication.  If a matching dNSName is found, this constraint is met.  If no dNSName values are present, this constraint is matched against SubjectName CN using same suffix match comparison.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-private-key">phase2-private-key</entry><entry align="left">byte array</entry><entry align="left"/><entry>Contains the "phase 2" inner private key when the "phase2-auth" or "phase2-autheap" property is set to "tls". Key data is specified using a "scheme"; two are currently supported: blob and path. When using the blob scheme and private keys, this property should be set to the key's encrypted PEM encoded data. When using private keys with the path scheme, this property should be set to the full UTF-8 encoded path of the key, prefixed with the string "file://" and ending with a terminating NUL byte. When using PKCS#12 format private keys and the blob scheme, this property should be set to the PKCS#12 data and the "phase2-private-key-password" property must be set to password used to decrypt the PKCS#12 certificate and key. When using PKCS#12 files and the path scheme, this property should be set to the full UTF-8 encoded path of the key, prefixed with the string "file://" and ending with a terminating NUL byte, and as with the blob scheme the "phase2-private-key-password" property must be set to the password used to decode the PKCS#12 private key and certificate.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-private-key-password">phase2-private-key-password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to decrypt the "phase 2" private key specified in the "phase2-private-key" property when the private key either uses the path scheme, or is a PKCS#12 format key.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-private-key-password-flags">phase2-private-key-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "phase2-private-key-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.phase2-subject-match">phase2-subject-match</entry><entry align="left">string</entry><entry align="left"/><entry>Substring to be matched against the subject of the certificate presented by the authentication server during the inner "phase 2" authentication. When unset, no verification of the authentication server certificate's subject is performed.  This property provides little security, if any, and its use is deprecated in favor of NMSetting8021x:phase2-domain-suffix-match.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.pin">pin</entry><entry align="left">string</entry><entry align="left"/><entry>PIN used for EAP authentication methods.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.pin-flags">pin-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "pin" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.private-key">private-key</entry><entry align="left">byte array</entry><entry align="left"/><entry>Contains the private key when the "eap" property is set to "tls". Key data is specified using a "scheme"; two are currently supported: blob and path. When using the blob scheme and private keys, this property should be set to the key's encrypted PEM encoded data. When using private keys with the path scheme, this property should be set to the full UTF-8 encoded path of the key, prefixed with the string "file://" and ending with a terminating NUL byte. When using PKCS#12 format private keys and the blob scheme, this property should be set to the PKCS#12 data and the "private-key-password" property must be set to password used to decrypt the PKCS#12 certificate and key. When using PKCS#12 files and the path scheme, this property should be set to the full UTF-8 encoded path of the key, prefixed with the string "file://" and ending with a terminating NUL byte, and as with the blob scheme the "private-key-password" property must be set to the password used to decode the PKCS#12 private key and certificate. WARNING: "private-key" is not a "secret" property, and thus unencrypted private key data using the BLOB scheme may be readable by unprivileged users.  Private keys should always be encrypted with a private key password to prevent unauthorized access to unencrypted private key data.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.private-key-password">private-key-password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to decrypt the private key specified in the "private-key" property when the private key either uses the path scheme, or if the private key is a PKCS#12 format key.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.private-key-password-flags">private-key-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "private-key-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.subject-match">subject-match</entry><entry align="left">string</entry><entry align="left"/><entry>Substring to be matched against the subject of the certificate presented by the authentication server. When unset, no verification of the authentication server certificate's subject is performed.  This property provides little security, if any, and its use is deprecated in favor of NMSetting8021x:domain-suffix-match.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-1x.system-ca-certs">system-ca-certs</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>When TRUE, overrides the "ca-path" and "phase2-ca-path" properties using the system CA directory specified at configure time with the --system-ca-path switch.  The certificates in this directory are added to the verification chain in addition to any certificates specified by the "ca-cert" and "phase2-ca-cert" properties. If the path provided with --system-ca-path is rather a file name (bundle of trusted CA certificates), it overrides "ca-cert" and "phase2-ca-cert" properties instead (sets ca_cert/ca_cert2 options for wpa_supplicant).</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>adsl setting</title><para>ADSL Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.adsl.encapsulation">encapsulation</entry><entry align="left">string</entry><entry align="left"/><entry>Encapsulation of ADSL connection.  Can be "vcmux" or "llc".</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.name">name</entry><entry align="left">string</entry><entry align="left">adsl</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.password">password</entry><entry align="left">string</entry><entry align="left"/><entry>Password used to authenticate with the ADSL service.</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.password-flags">password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.protocol">protocol</entry><entry align="left">string</entry><entry align="left"/><entry>ADSL connection protocol.  Can be "pppoa", "pppoe" or "ipoatm".</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.username">username</entry><entry align="left">string</entry><entry align="left"/><entry>Username used to authenticate with the ADSL service.</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.vci">vci</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>VCI of ADSL connection</entry></row>
    <row><entry align="left" id="nm-settings.property.adsl.vpi">vpi</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>VPI of ADSL connection</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>bluetooth setting</title><para>Bluetooth Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.bluetooth.bdaddr">bdaddr</entry><entry align="left">byte array</entry><entry align="left"/><entry>The Bluetooth address of the device.</entry></row>
    <row><entry align="left" id="nm-settings.property.bluetooth.name">name</entry><entry align="left">string</entry><entry align="left">bluetooth</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.bluetooth.type">type</entry><entry align="left">string</entry><entry align="left"/><entry>Either "dun" for Dial-Up Networking connections or "panu" for Personal Area Networking connections to devices supporting the NAP profile.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>bond setting</title><para>Bonding Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.bond.interface-name">interface-name</entry><entry align="left">string</entry><entry align="left"/><entry>Deprecated in favor of connection.interface-name, but can be used for backward-compatibility with older daemons, to set the bond's interface name.</entry></row>
    <row><entry align="left" id="nm-settings.property.bond.name">name</entry><entry align="left">string</entry><entry align="left">bond</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.bond.options">options</entry><entry align="left">dict of string to string</entry><entry align="left">{'mode': 'balance-rr'}</entry><entry>Dictionary of key/value pairs of bonding options.  Both keys and values must be strings. Option names must contain only alphanumeric characters (ie, [a-zA-Z0-9]).</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>bridge setting</title><para>Bridging Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.bridge.ageing-time">ageing-time</entry><entry align="left">uint32</entry><entry align="left">300</entry><entry>The Ethernet MAC address aging time, in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.forward-delay">forward-delay</entry><entry align="left">uint32</entry><entry align="left">15</entry><entry>The Spanning Tree Protocol (STP) forwarding delay, in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.group-forward-mask">group-forward-mask</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>A mask of group addresses to forward. Usually, group addresses in the range from 01:80:C2:00:00:00 to 01:80:C2:00:00:0F are not forwarded according to standards. This property is a mask of 16 bits, each corresponding to a group address in that range that must be forwarded. The mask can't have bits 0, 1 or 2 set because they are used for STP, MAC pause frames and LACP.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.hello-time">hello-time</entry><entry align="left">uint32</entry><entry align="left">2</entry><entry>The Spanning Tree Protocol (STP) hello time, in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.interface-name">interface-name</entry><entry align="left">string</entry><entry align="left"/><entry>Deprecated in favor of connection.interface-name, but can be used for backward-compatibility with older daemons, to set the bridge's interface name.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.mac-address">mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>If specified, the MAC address of bridge. When creating a new bridge, this MAC address will be set. If this field is left unspecified, the "ethernet.cloned-mac-address" is referred instead to generate the initial MAC address. Note that setting "ethernet.cloned-mac-address" anyway overwrites the MAC address of the bridge later while activating the bridge. Hence, this property is deprecated.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.max-age">max-age</entry><entry align="left">uint32</entry><entry align="left">20</entry><entry>The Spanning Tree Protocol (STP) maximum message age, in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.multicast-snooping">multicast-snooping</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Controls whether IGMP snooping is enabled for this bridge. Note that if snooping was automatically disabled due to hash collisions, the system may refuse to enable the feature until the collisions are resolved.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.name">name</entry><entry align="left">string</entry><entry align="left">bridge</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.priority">priority</entry><entry align="left">uint32</entry><entry align="left">32768</entry><entry>Sets the Spanning Tree Protocol (STP) priority for this bridge.  Lower values are "better"; the lowest priority bridge will be elected the root bridge.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge.stp">stp</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Controls whether Spanning Tree Protocol (STP) is enabled for this bridge.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>bridge-port setting</title><para>Bridge Port Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.bridge-port.hairpin-mode">hairpin-mode</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Enables or disables "hairpin mode" for the port, which allows frames to be sent back out through the port the frame was received on.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge-port.name">name</entry><entry align="left">string</entry><entry align="left">bridge-port</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge-port.path-cost">path-cost</entry><entry align="left">uint32</entry><entry align="left">100</entry><entry>The Spanning Tree Protocol (STP) port cost for destinations via this port.</entry></row>
    <row><entry align="left" id="nm-settings.property.bridge-port.priority">priority</entry><entry align="left">uint32</entry><entry align="left">32</entry><entry>The Spanning Tree Protocol (STP) priority of this bridge port.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>cdma setting</title><para>CDMA-based Mobile Broadband Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.cdma.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, only transmit packets of the specified size or smaller, breaking larger packets up into multiple frames.</entry></row>
    <row><entry align="left" id="nm-settings.property.cdma.name">name</entry><entry align="left">string</entry><entry align="left">cdma</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.cdma.number">number</entry><entry align="left">string</entry><entry align="left"/><entry>The number to dial to establish the connection to the CDMA-based mobile broadband network, if any.  If not specified, the default number (#777) is used when required.</entry></row>
    <row><entry align="left" id="nm-settings.property.cdma.password">password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to authenticate with the network, if required.  Many providers do not require a password, or accept any password.  But if a password is required, it is specified here.</entry></row>
    <row><entry align="left" id="nm-settings.property.cdma.password-flags">password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.cdma.username">username</entry><entry align="left">string</entry><entry align="left"/><entry>The username used to authenticate with the network, if required.  Many providers do not require a username, or accept any username.  But if a username is required, it is specified here.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>dcb setting</title><para>Data Center Bridging Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.dcb.app-fcoe-flags">app-fcoe-flags</entry><entry align="left">NMSettingDcbFlags (uint32)</entry><entry align="left"/><entry>Specifies the NMSettingDcbFlags for the DCB FCoE application.  Flags may be any combination of NM_SETTING_DCB_FLAG_ENABLE (0x1), NM_SETTING_DCB_FLAG_ADVERTISE (0x2), and NM_SETTING_DCB_FLAG_WILLING (0x4).</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.app-fcoe-mode">app-fcoe-mode</entry><entry align="left">string</entry><entry align="left">"fabric"</entry><entry>The FCoE controller mode; either "fabric" (default) or "vn2vn".</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.app-fcoe-priority">app-fcoe-priority</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>The highest User Priority (0 - 7) which FCoE frames should use, or -1 for default priority.  Only used when the "app-fcoe-flags" property includes the NM_SETTING_DCB_FLAG_ENABLE (0x1) flag.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.app-fip-flags">app-fip-flags</entry><entry align="left">NMSettingDcbFlags (uint32)</entry><entry align="left"/><entry>Specifies the NMSettingDcbFlags for the DCB FIP application.  Flags may be any combination of NM_SETTING_DCB_FLAG_ENABLE (0x1), NM_SETTING_DCB_FLAG_ADVERTISE (0x2), and NM_SETTING_DCB_FLAG_WILLING (0x4).</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.app-fip-priority">app-fip-priority</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>The highest User Priority (0 - 7) which FIP frames should use, or -1 for default priority.  Only used when the "app-fip-flags" property includes the NM_SETTING_DCB_FLAG_ENABLE (0x1) flag.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.app-iscsi-flags">app-iscsi-flags</entry><entry align="left">NMSettingDcbFlags (uint32)</entry><entry align="left"/><entry>Specifies the NMSettingDcbFlags for the DCB iSCSI application.  Flags may be any combination of NM_SETTING_DCB_FLAG_ENABLE (0x1), NM_SETTING_DCB_FLAG_ADVERTISE (0x2), and NM_SETTING_DCB_FLAG_WILLING (0x4).</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.app-iscsi-priority">app-iscsi-priority</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>The highest User Priority (0 - 7) which iSCSI frames should use, or -1 for default priority. Only used when the "app-iscsi-flags" property includes the NM_SETTING_DCB_FLAG_ENABLE (0x1) flag.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.name">name</entry><entry align="left">string</entry><entry align="left">dcb</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-bandwidth">priority-bandwidth</entry><entry align="left">array of uint32</entry><entry align="left">[0, 0, 0, 0, 0, 0, 0, 0]</entry><entry>An array of 8 uint values, where the array index corresponds to the User Priority (0 - 7) and the value indicates the percentage of bandwidth of the priority's assigned group that the priority may use.  The sum of all percentages for priorities which belong to the same group must total 100 percents.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-flow-control">priority-flow-control</entry><entry align="left">array of uint32</entry><entry align="left">[0, 0, 0, 0, 0, 0, 0, 0]</entry><entry>An array of 8 boolean values, where the array index corresponds to the User Priority (0 - 7) and the value indicates whether or not the corresponding priority should transmit priority pause.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-flow-control-flags">priority-flow-control-flags</entry><entry align="left">NMSettingDcbFlags (uint32)</entry><entry align="left"/><entry>Specifies the NMSettingDcbFlags for DCB Priority Flow Control (PFC). Flags may be any combination of NM_SETTING_DCB_FLAG_ENABLE (0x1), NM_SETTING_DCB_FLAG_ADVERTISE (0x2), and NM_SETTING_DCB_FLAG_WILLING (0x4).</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-group-bandwidth">priority-group-bandwidth</entry><entry align="left">array of uint32</entry><entry align="left">[0, 0, 0, 0, 0, 0, 0, 0]</entry><entry>An array of 8 uint values, where the array index corresponds to the Priority Group ID (0 - 7) and the value indicates the percentage of link bandwidth allocated to that group.  Allowed values are 0 - 100, and the sum of all values must total 100 percents.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-group-flags">priority-group-flags</entry><entry align="left">NMSettingDcbFlags (uint32)</entry><entry align="left"/><entry>Specifies the NMSettingDcbFlags for DCB Priority Groups.  Flags may be any combination of NM_SETTING_DCB_FLAG_ENABLE (0x1), NM_SETTING_DCB_FLAG_ADVERTISE (0x2), and NM_SETTING_DCB_FLAG_WILLING (0x4).</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-group-id">priority-group-id</entry><entry align="left">array of uint32</entry><entry align="left">[0, 0, 0, 0, 0, 0, 0, 0]</entry><entry>An array of 8 uint values, where the array index corresponds to the User Priority (0 - 7) and the value indicates the Priority Group ID.  Allowed Priority Group ID values are 0 - 7 or 15 for the unrestricted group.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-strict-bandwidth">priority-strict-bandwidth</entry><entry align="left">array of uint32</entry><entry align="left">[0, 0, 0, 0, 0, 0, 0, 0]</entry><entry>An array of 8 boolean values, where the array index corresponds to the User Priority (0 - 7) and the value indicates whether or not the priority may use all of the bandwidth allocated to its assigned group.</entry></row>
    <row><entry align="left" id="nm-settings.property.dcb.priority-traffic-class">priority-traffic-class</entry><entry align="left">array of uint32</entry><entry align="left">[0, 0, 0, 0, 0, 0, 0, 0]</entry><entry>An array of 8 uint values, where the array index corresponds to the User Priority (0 - 7) and the value indicates the traffic class (0 - 7) to which the priority is mapped.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>dummy setting</title><para>Dummy Link Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.dummy.name">name</entry><entry align="left">string</entry><entry align="left">dummy</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>generic setting</title><para>Generic Link Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.generic.name">name</entry><entry align="left">string</entry><entry align="left">generic</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>gsm setting</title><para>GSM-based Mobile Broadband Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.gsm.apn">apn</entry><entry align="left">string</entry><entry align="left"/><entry>The GPRS Access Point Name specifying the APN used when establishing a data session with the GSM-based network.  The APN often determines how the user will be billed for their network usage and whether the user has access to the Internet or just a provider-specific walled-garden, so it is important to use the correct APN for the user's mobile broadband plan. The APN may only be composed of the characters a-z, 0-9, ., and - per GSM 03.60 Section 14.9.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.device-id">device-id</entry><entry align="left">string</entry><entry align="left"/><entry>The device unique identifier (as given by the WWAN management service) which this connection applies to.  If given, the connection will only apply to the specified device.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.home-only">home-only</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>When TRUE, only connections to the home network will be allowed. Connections to roaming networks will not be made.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, only transmit packets of the specified size or smaller, breaking larger packets up into multiple frames.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.name">name</entry><entry align="left">string</entry><entry align="left">gsm</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.network-id">network-id</entry><entry align="left">string</entry><entry align="left"/><entry>The Network ID (GSM LAI format, ie MCC-MNC) to force specific network registration.  If the Network ID is specified, NetworkManager will attempt to force the device to register only on the specified network. This can be used to ensure that the device does not roam when direct roaming control of the device is not otherwise possible.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.number">number</entry><entry align="left">string</entry><entry align="left"/><entry>Number to dial when establishing a PPP data session with the GSM-based mobile broadband network.  Many modems do not require PPP for connections to the mobile network and thus this property should be left blank, which allows NetworkManager to select the appropriate settings automatically.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.password">password</entry><entry align="left">string</entry><entry align="left"/><entry>The password used to authenticate with the network, if required.  Many providers do not require a password, or accept any password.  But if a password is required, it is specified here.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.password-flags">password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.pin">pin</entry><entry align="left">string</entry><entry align="left"/><entry>If the SIM is locked with a PIN it must be unlocked before any other operations are requested.  Specify the PIN here to allow operation of the device.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.pin-flags">pin-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "pin" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.sim-id">sim-id</entry><entry align="left">string</entry><entry align="left"/><entry>The SIM card unique identifier (as given by the WWAN management service) which this connection applies to.  If given, the connection will apply to any device also allowed by "device-id" which contains a SIM card matching the given identifier.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.sim-operator-id">sim-operator-id</entry><entry align="left">string</entry><entry align="left"/><entry>A MCC/MNC string like "310260" or "21601" identifying the specific mobile network operator which this connection applies to.  If given, the connection will apply to any device also allowed by "device-id" and "sim-id" which contains a SIM card provisioned by the given operator.</entry></row>
    <row><entry align="left" id="nm-settings.property.gsm.username">username</entry><entry align="left">string</entry><entry align="left"/><entry>The username used to authenticate with the network, if required.  Many providers do not require a username, or accept any username.  But if a username is required, it is specified here.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>infiniband setting</title><para>Infiniband Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.infiniband.mac-address">mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>If specified, this connection will only apply to the IPoIB device whose permanent MAC address matches. This property does not change the MAC address of the device (i.e. MAC spoofing).</entry></row>
    <row><entry align="left" id="nm-settings.property.infiniband.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, only transmit packets of the specified size or smaller, breaking larger packets up into multiple frames.</entry></row>
    <row><entry align="left" id="nm-settings.property.infiniband.name">name</entry><entry align="left">string</entry><entry align="left">infiniband</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.infiniband.p-key">p-key</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>The InfiniBand P_Key to use for this device. A value of -1 means to use the default P_Key (aka "the P_Key at index 0").  Otherwise it is a 16-bit unsigned integer, whose high bit is set if it is a "full membership" P_Key.</entry></row>
    <row><entry align="left" id="nm-settings.property.infiniband.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>The interface name of the parent device of this device. Normally NULL, but if the "p_key" property is set, then you must specify the base device by setting either this property or "mac-address".</entry></row>
    <row><entry align="left" id="nm-settings.property.infiniband.transport-mode">transport-mode</entry><entry align="left">string</entry><entry align="left"/><entry>The IP-over-InfiniBand transport mode. Either "datagram" or "connected".</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ipv4 setting</title><para>IPv4 Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ipv4.address-data">address-data</entry><entry align="left">array of vardict</entry><entry align="left"/><entry>Array of IPv4 addresses. Each address dictionary contains at least 'address' and 'prefix' entries, containing the IP address as a string, and the prefix length as a uint32. Additional attributes may also exist on some addresses.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.addresses">addresses</entry><entry align="left">array of array of uint32</entry><entry align="left">[]</entry><entry>Deprecated in favor of the 'address-data' and 'gateway' properties, but this can be used for backward-compatibility with older daemons. Note that if you send this property the daemon will ignore 'address-data' and 'gateway'.  Array of IPv4 address structures.  Each IPv4 address structure is composed of 3 32-bit values; the first being the IPv4 address (network byte order), the second the prefix (1 - 32), and last the IPv4 gateway (network byte order). The gateway may be left as 0 if no gateway exists for that subnet.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dad-timeout">dad-timeout</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Timeout in milliseconds used to check for the presence of duplicate IP addresses on the network.  If an address conflict is detected, the activation will fail.  A zero value means that no duplicate address detection is performed, -1 means the default value (either configuration ipvx.dad-timeout override or 3 seconds).  A value greater than zero is a timeout in milliseconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dhcp-client-id">dhcp-client-id</entry><entry align="left">string</entry><entry align="left"/><entry>A string sent to the DHCP server to identify the local machine which the DHCP server may use to customize the DHCP lease and options. When the property is a hex string ('aa:bb:cc') it is interpreted as a binary client ID, in which case the first byte is assumed to be the 'type' field as per RFC 2132 section 9.14 and the remaining bytes may be an hardware address (e.g. '01:xx:xx:xx:xx:xx:xx' where 1 is the Ethernet ARP type and the rest is a MAC address). If the property is not a hex string it is considered as a non-hardware-address client ID and the 'type' field is set to 0.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dhcp-fqdn">dhcp-fqdn</entry><entry align="left">string</entry><entry align="left"/><entry>If the "dhcp-send-hostname" property is TRUE, then the specified FQDN will be sent to the DHCP server when acquiring a lease. This property and "dhcp-hostname" are mutually exclusive and cannot be set at the same time.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dhcp-hostname">dhcp-hostname</entry><entry align="left">string</entry><entry align="left"/><entry>If the "dhcp-send-hostname" property is TRUE, then the specified name will be sent to the DHCP server when acquiring a lease. This property and "dhcp-fqdn" are mutually exclusive and cannot be set at the same time.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dhcp-send-hostname">dhcp-send-hostname</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>If TRUE, a hostname is sent to the DHCP server when acquiring a lease. Some DHCP servers use this hostname to update DNS databases, essentially providing a static hostname for the computer.  If the "dhcp-hostname" property is NULL and this property is TRUE, the current persistent hostname of the computer is sent.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dhcp-timeout">dhcp-timeout</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>A timeout for a DHCP transaction in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dns">dns</entry><entry align="left">array of uint32</entry><entry align="left">[]</entry><entry>Array of IP addresses of DNS servers (as network-byte-order integers)</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dns-options">dns-options</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>Array of DNS options as described in man 5 resolv.conf. NULL means that the options are unset and left at the default. In this case NetworkManager will use default options. This is distinct from an empty list of properties.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dns-priority">dns-priority</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Intra-connection DNS priority. The relative priority to be used when determining the order of DNS servers in resolv.conf.  A lower value means that servers will be on top of the file.  Zero selects the default value, which is 50 for VPNs and 100 for other connections.  Note that the priority is to order DNS settings for multiple active connections. It does not disambiguate multiple DNS servers within the same connection profile. For that, just specify the DNS servers in the desired order. When multiple devices have configurations with the same priority, the one with an active default route will be preferred. Note that when using dns=dnsmasq the order is meaningless since dnsmasq forwards queries to all known servers at the same time. Negative values have the special effect of excluding other configurations with a greater priority value; so in presence of at least a negative priority, only DNS servers from connections with the lowest priority value will be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.dns-search">dns-search</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>Array of DNS search domains.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.gateway">gateway</entry><entry align="left">string</entry><entry align="left"/><entry>The gateway associated with this configuration. This is only meaningful if "addresses" is also set.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.ignore-auto-dns">ignore-auto-dns</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>When "method" is set to "auto" and this property to TRUE, automatically configured nameservers and search domains are ignored and only nameservers and search domains specified in the "dns" and "dns-search" properties, if any, are used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.ignore-auto-routes">ignore-auto-routes</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>When "method" is set to "auto" and this property to TRUE, automatically configured routes are ignored and only routes specified in the "routes" property, if any, are used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.may-fail">may-fail</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>If TRUE, allow overall network configuration to proceed even if the configuration specified by this property times out.  Note that at least one IP configuration must succeed or overall network configuration will still fail.  For example, in IPv6-only networks, setting this property to TRUE on the NMSettingIP4Config allows the overall network configuration to succeed if IPv4 configuration fails but IPv6 configuration completes successfully.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.method">method</entry><entry align="left">string</entry><entry align="left"/><entry>IP configuration method. NMSettingIP4Config and NMSettingIP6Config both support "auto", "manual", and "link-local". See the subclass-specific documentation for other values. In general, for the "auto" method, properties such as "dns" and "routes" specify information that is added on to the information returned from automatic configuration.  The "ignore-auto-routes" and "ignore-auto-dns" properties modify this behavior. For methods that imply no upstream network, such as "shared" or "link-local", these properties must be empty. For IPv4 method "shared", the IP subnet can be configured by adding one manual IPv4 address or otherwise 10.42.x.0/24 is chosen.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.name">name</entry><entry align="left">string</entry><entry align="left">ipv4</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.never-default">never-default</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, this connection will never be the default connection for this IP type, meaning it will never be assigned the default route by NetworkManager.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.route-data">route-data</entry><entry align="left">array of vardict</entry><entry align="left"/><entry>Array of IPv4 routes. Each route dictionary contains at least 'dest' and 'prefix' entries, containing the destination IP address as a string, and the prefix length as a uint32. Most routes will also have a 'gateway' entry, containing the gateway IP address as a string. If the route has a 'metric' entry (containing a uint32), that will be used as the metric for the route (otherwise NM will pick a default value appropriate to the device). Additional attributes may also exist on some routes.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.route-metric">route-metric</entry><entry align="left">int64</entry><entry align="left">-1</entry><entry>The default metric for routes that don't explicitly specify a metric. The default value -1 means that the metric is chosen automatically based on the device type. The metric applies to dynamic routes, manual (static) routes that don't have an explicit metric setting, address prefix routes, and the default route. Note that for IPv6, the kernel accepts zero (0) but coerces it to 1024 (user default). Hence, setting this property to zero effectively mean setting it to 1024. For IPv4, zero is a regular value for the metric.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.route-table">route-table</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Enable policy routing (source routing) and set the routing table used when adding routes. This affects all routes, including device-routes, IPv4LL, DHCP, SLAAC, default-routes and static routes. But note that static routes can individually overwrite the setting by explicitly specifying a non-zero routing table. If the table setting is left at zero, it is eligible to be overwritten via global configuration. If the property is zero even after applying the global configuration value, policy routing is disabled for the address family of this connection. Policy routing disabled means that NetworkManager will add all routes to the main table (except static routes that explicitly configure a different table). Additionally, NetworkManager will not delete any extraneous routes from tables except the main table. This is to preserve backward compatibility for users who manage routing tables outside of NetworkManager.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv4.routes">routes</entry><entry align="left">array of array of uint32</entry><entry align="left">[]</entry><entry>Deprecated in favor of the 'route-data' property, but this can be used for backward-compatibility with older daemons. Note that if you send this property the daemon will ignore 'route-data'.  Array of IPv4 route structures.  Each IPv4 route structure is composed of 4 32-bit values; the first being the destination IPv4 network or address (network byte order), the second the destination network or address prefix (1 - 32), the third being the next-hop (network byte order) if any, and the fourth being the route metric. If the metric is 0, NM will choose an appropriate default metric for the device. (There is no way to explicitly specify an actual metric of 0 with this property.)</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ipv6 setting</title><para>IPv6 Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ipv6.addr-gen-mode">addr-gen-mode</entry><entry align="left">int32</entry><entry align="left">1</entry><entry>Configure method for creating the address for use with RFC4862 IPv6 Stateless Address Autoconfiguration. The permitted values are: NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE_EUI64 (0) or NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE_STABLE_PRIVACY (1). If the property is set to EUI64, the addresses will be generated using the interface tokens derived from hardware address. This makes the host part of the address to stay constant, making it possible to track host's presence when it changes networks. The address changes when the interface hardware is replaced. The value of stable-privacy enables use of cryptographically secure hash of a secret host-specific key along with the connection's stable-id and the network address as specified by RFC7217. This makes it impossible to use the address track host's presence, and makes the address stable when the network interface hardware is replaced. On D-Bus, the absence of an addr-gen-mode setting equals enabling stable-privacy. For keyfile plugin, the absence of the setting on disk means EUI64 so that the property doesn't change on upgrade from older versions. Note that this setting is distinct from the Privacy Extensions as configured by "ip6-privacy" property and it does not affect the temporary addresses configured with this option.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.address-data">address-data</entry><entry align="left">array of vardict</entry><entry align="left"/><entry>Array of IPv6 addresses. Each address dictionary contains at least 'address' and 'prefix' entries, containing the IP address as a string, and the prefix length as a uint32. Additional attributes may also exist on some addresses.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.addresses">addresses</entry><entry align="left">array of legacy IPv6 address struct (a(ayuay))</entry><entry align="left">[]</entry><entry>Deprecated in favor of the 'address-data' and 'gateway' properties, but this can be used for backward-compatibility with older daemons. Note that if you send this property the daemon will ignore 'address-data' and 'gateway'.  Array of IPv6 address structures.  Each IPv6 address structure is composed of an IPv6 address, a prefix length (1 - 128), and an IPv6 gateway address. The gateway may be zeroed out if no gateway exists for that subnet.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dad-timeout">dad-timeout</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Timeout in milliseconds used to check for the presence of duplicate IP addresses on the network.  If an address conflict is detected, the activation will fail.  A zero value means that no duplicate address detection is performed, -1 means the default value (either configuration ipvx.dad-timeout override or 3 seconds).  A value greater than zero is a timeout in milliseconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dhcp-hostname">dhcp-hostname</entry><entry align="left">string</entry><entry align="left"/><entry>If the "dhcp-send-hostname" property is TRUE, then the specified name will be sent to the DHCP server when acquiring a lease. This property and "dhcp-fqdn" are mutually exclusive and cannot be set at the same time.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dhcp-send-hostname">dhcp-send-hostname</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>If TRUE, a hostname is sent to the DHCP server when acquiring a lease. Some DHCP servers use this hostname to update DNS databases, essentially providing a static hostname for the computer.  If the "dhcp-hostname" property is NULL and this property is TRUE, the current persistent hostname of the computer is sent.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dhcp-timeout">dhcp-timeout</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>A timeout for a DHCP transaction in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dns">dns</entry><entry align="left">array of byte array</entry><entry align="left">[]</entry><entry>Array of IP addresses of DNS servers (in network byte order)</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dns-options">dns-options</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>Array of DNS options as described in man 5 resolv.conf. NULL means that the options are unset and left at the default. In this case NetworkManager will use default options. This is distinct from an empty list of properties.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dns-priority">dns-priority</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Intra-connection DNS priority. The relative priority to be used when determining the order of DNS servers in resolv.conf.  A lower value means that servers will be on top of the file.  Zero selects the default value, which is 50 for VPNs and 100 for other connections.  Note that the priority is to order DNS settings for multiple active connections. It does not disambiguate multiple DNS servers within the same connection profile. For that, just specify the DNS servers in the desired order. When multiple devices have configurations with the same priority, the one with an active default route will be preferred. Note that when using dns=dnsmasq the order is meaningless since dnsmasq forwards queries to all known servers at the same time. Negative values have the special effect of excluding other configurations with a greater priority value; so in presence of at least a negative priority, only DNS servers from connections with the lowest priority value will be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.dns-search">dns-search</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>Array of DNS search domains.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.gateway">gateway</entry><entry align="left">string</entry><entry align="left"/><entry>The gateway associated with this configuration. This is only meaningful if "addresses" is also set.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.ignore-auto-dns">ignore-auto-dns</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>When "method" is set to "auto" and this property to TRUE, automatically configured nameservers and search domains are ignored and only nameservers and search domains specified in the "dns" and "dns-search" properties, if any, are used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.ignore-auto-routes">ignore-auto-routes</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>When "method" is set to "auto" and this property to TRUE, automatically configured routes are ignored and only routes specified in the "routes" property, if any, are used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.ip6-privacy">ip6-privacy</entry><entry align="left">NMSettingIP6ConfigPrivacy (int32)</entry><entry align="left"/><entry>Configure IPv6 Privacy Extensions for SLAAC, described in RFC4941.  If enabled, it makes the kernel generate a temporary IPv6 address in addition to the public one generated from MAC address via modified EUI-64.  This enhances privacy, but could cause problems in some applications, on the other hand.  The permitted values are: -1: unknown, 0: disabled, 1: enabled (prefer public address), 2: enabled (prefer temporary addresses). Having a per-connection setting set to "-1" (unknown) means fallback to global configuration "ipv6.ip6-privacy". If also global configuration is unspecified or set to "-1", fallback to read "/proc/sys/net/ipv6/conf/default/use_tempaddr". Note that this setting is distinct from the Stable Privacy addresses that can be enabled with the "addr-gen-mode" property's "stable-privacy" setting as another way of avoiding host tracking with IPv6 addresses.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.may-fail">may-fail</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>If TRUE, allow overall network configuration to proceed even if the configuration specified by this property times out.  Note that at least one IP configuration must succeed or overall network configuration will still fail.  For example, in IPv6-only networks, setting this property to TRUE on the NMSettingIP4Config allows the overall network configuration to succeed if IPv4 configuration fails but IPv6 configuration completes successfully.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.method">method</entry><entry align="left">string</entry><entry align="left"/><entry>IP configuration method. NMSettingIP4Config and NMSettingIP6Config both support "auto", "manual", and "link-local". See the subclass-specific documentation for other values. In general, for the "auto" method, properties such as "dns" and "routes" specify information that is added on to the information returned from automatic configuration.  The "ignore-auto-routes" and "ignore-auto-dns" properties modify this behavior. For methods that imply no upstream network, such as "shared" or "link-local", these properties must be empty. For IPv4 method "shared", the IP subnet can be configured by adding one manual IPv4 address or otherwise 10.42.x.0/24 is chosen.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.name">name</entry><entry align="left">string</entry><entry align="left">ipv6</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.never-default">never-default</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, this connection will never be the default connection for this IP type, meaning it will never be assigned the default route by NetworkManager.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.route-data">route-data</entry><entry align="left">array of vardict</entry><entry align="left"/><entry>Array of IPv6 routes. Each route dictionary contains at least 'dest' and 'prefix' entries, containing the destination IP address as a string, and the prefix length as a uint32. Most routes will also have a 'next-hop' entry, containing the next hop IP address as a string. If the route has a 'metric' entry (containing a uint32), that will be used as the metric for the route (otherwise NM will pick a default value appropriate to the device). Additional attributes may also exist on some routes.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.route-metric">route-metric</entry><entry align="left">int64</entry><entry align="left">-1</entry><entry>The default metric for routes that don't explicitly specify a metric. The default value -1 means that the metric is chosen automatically based on the device type. The metric applies to dynamic routes, manual (static) routes that don't have an explicit metric setting, address prefix routes, and the default route. Note that for IPv6, the kernel accepts zero (0) but coerces it to 1024 (user default). Hence, setting this property to zero effectively mean setting it to 1024. For IPv4, zero is a regular value for the metric.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.route-table">route-table</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Enable policy routing (source routing) and set the routing table used when adding routes. This affects all routes, including device-routes, IPv4LL, DHCP, SLAAC, default-routes and static routes. But note that static routes can individually overwrite the setting by explicitly specifying a non-zero routing table. If the table setting is left at zero, it is eligible to be overwritten via global configuration. If the property is zero even after applying the global configuration value, policy routing is disabled for the address family of this connection. Policy routing disabled means that NetworkManager will add all routes to the main table (except static routes that explicitly configure a different table). Additionally, NetworkManager will not delete any extraneous routes from tables except the main table. This is to preserve backward compatibility for users who manage routing tables outside of NetworkManager.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.routes">routes</entry><entry align="left">array of legacy IPv6 route struct (a(ayuayu))</entry><entry align="left">[]</entry><entry>Deprecated in favor of the 'route-data' property, but this can be used for backward-compatibility with older daemons. Note that if you send this property the daemon will ignore 'route-data'.  Array of IPv6 route structures.  Each IPv6 route structure is composed of an IPv6 address, a prefix length (1 - 128), an IPv6 next hop address (which may be zeroed out if there is no next hop), and a metric. If the metric is 0, NM will choose an appropriate default metric for the device.</entry></row>
    <row><entry align="left" id="nm-settings.property.ipv6.token">token</entry><entry align="left">string</entry><entry align="left"/><entry>Configure the token for draft-chown-6man-tokenised-ipv6-identifiers-02 IPv6 tokenized interface identifiers. Useful with eui64 addr-gen-mode.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ip-tunnel setting</title><para>IP Tunneling Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.encapsulation-limit">encapsulation-limit</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>How many additional levels of encapsulation are permitted to be prepended to packets. This property applies only to IPv6 tunnels.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.flow-label">flow-label</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The flow label to assign to tunnel packets. This property applies only to IPv6 tunnels.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.input-key">input-key</entry><entry align="left">string</entry><entry align="left"/><entry>The key used for tunnel input packets; the property is valid only for certain tunnel modes (GRE, IP6GRE). If empty, no key is used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.local">local</entry><entry align="left">string</entry><entry align="left"/><entry>The local endpoint of the tunnel; the value can be empty, otherwise it must contain an IPv4 or IPv6 address.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.mode">mode</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The tunneling mode, for example NM_IP_TUNNEL_MODE_IPIP (1) or NM_IP_TUNNEL_MODE_GRE (2).</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, only transmit packets of the specified size or smaller, breaking larger packets up into multiple fragments.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.name">name</entry><entry align="left">string</entry><entry align="left">ip-tunnel</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.output-key">output-key</entry><entry align="left">string</entry><entry align="left"/><entry>The key used for tunnel output packets; the property is valid only for certain tunnel modes (GRE, IP6GRE). If empty, no key is used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the parent interface name or parent connection UUID the new device will be bound to so that tunneled packets will only be routed via that interface.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.path-mtu-discovery">path-mtu-discovery</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Whether to enable Path MTU Discovery on this tunnel.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.remote">remote</entry><entry align="left">string</entry><entry align="left"/><entry>The remote endpoint of the tunnel; the value must contain an IPv4 or IPv6 address.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.tos">tos</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The type of service (IPv4) or traffic class (IPv6) field to be set on tunneled packets.</entry></row>
    <row><entry align="left" id="nm-settings.property.ip-tunnel.ttl">ttl</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The TTL to assign to tunneled packets. 0 is a special value meaning that packets inherit the TTL value.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>macsec setting</title><para>MACSec Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.macsec.encrypt">encrypt</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Whether the transmitted traffic must be encrypted.</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.mka-cak">mka-cak</entry><entry align="left">string</entry><entry align="left"/><entry>The pre-shared CAK (Connectivity Association Key) for MACsec Key Agreement.</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.mka-cak-flags">mka-cak-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "mka-cak" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.mka-ckn">mka-ckn</entry><entry align="left">string</entry><entry align="left"/><entry>The pre-shared CKN (Connectivity-association Key Name) for MACsec Key Agreement.</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.mode">mode</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Specifies how the CAK (Connectivity Association Key) for MKA (MACsec Key Agreement) is obtained.</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.name">name</entry><entry align="left">string</entry><entry align="left">macsec</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the parent interface name or parent connection UUID from which this MACSEC interface should be created.  If this property is not specified, the connection must contain an "802-3-ethernet" setting with a "mac-address" property.</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.port">port</entry><entry align="left">int32</entry><entry align="left">1</entry><entry>The port component of the SCI (Secure Channel Identifier), between 1 and 65534.</entry></row>
    <row><entry align="left" id="nm-settings.property.macsec.validation">validation</entry><entry align="left">int32</entry><entry align="left">2</entry><entry>Specifies the validation mode for incoming frames.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>macvlan setting</title><para>MAC VLAN Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.macvlan.mode">mode</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The macvlan mode, which specifies the communication mechanism between multiple macvlans on the same lower device.</entry></row>
    <row><entry align="left" id="nm-settings.property.macvlan.name">name</entry><entry align="left">string</entry><entry align="left">macvlan</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.macvlan.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the parent interface name or parent connection UUID from which this MAC-VLAN interface should be created.  If this property is not specified, the connection must contain an "802-3-ethernet" setting with a "mac-address" property.</entry></row>
    <row><entry align="left" id="nm-settings.property.macvlan.promiscuous">promiscuous</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Whether the interface should be put in promiscuous mode.</entry></row>
    <row><entry align="left" id="nm-settings.property.macvlan.tap">tap</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Whether the interface should be a MACVTAP.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>802-11-olpc-mesh setting</title><para>OLPC Wireless Mesh Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.802-11-olpc-mesh.channel">channel</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Channel on which the mesh network to join is located.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-olpc-mesh.dhcp-anycast-address">dhcp-anycast-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>Anycast DHCP MAC address used when requesting an IP address via DHCP. The specific anycast address used determines which DHCP server class answers the request.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-olpc-mesh.name">name</entry><entry align="left">string</entry><entry align="left">802-11-olpc-mesh</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-olpc-mesh.ssid">ssid</entry><entry align="left">byte array</entry><entry align="left"/><entry>SSID of the mesh network to join.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ovs-bridge setting</title><para>OvsBridge Link Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ovs-bridge.fail-mode">fail-mode</entry><entry align="left">string</entry><entry align="left"/><entry>The bridge failure mode. One of "secure", "standalone" or empty.</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-bridge.mcast-snooping-enable">mcast-snooping-enable</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Enable or disable multicast snooping.</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-bridge.name">name</entry><entry align="left">string</entry><entry align="left">ovs-bridge</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-bridge.rstp-enable">rstp-enable</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Enable or disable RSTP.</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-bridge.stp-enable">stp-enable</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Enable or disable STP.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ovs-interface setting</title><para>OpenVSwitch Interface Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ovs-interface.name">name</entry><entry align="left">string</entry><entry align="left">ovs-interface</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-interface.type">type</entry><entry align="left">string</entry><entry align="left"/><entry>The interface type. Either "internal", or empty.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ovs-patch setting</title><para>OvsPatch Link Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ovs-patch.name">name</entry><entry align="left">string</entry><entry align="left">ovs-patch</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-patch.peer">peer</entry><entry align="left">string</entry><entry align="left"/><entry>Specifies the unicast destination IP address of a remote OpenVSwitch bridge port to connect to.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ovs-port setting</title><para>OvsPort Link Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ovs-port.bond-downdelay">bond-downdelay</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The time port must be inactive in order to be considered down.</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-port.bond-mode">bond-mode</entry><entry align="left">string</entry><entry align="left"/><entry>Bonding mode. One of "active-backup", "balance-slb", or "balance-tcp".</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-port.bond-updelay">bond-updelay</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The time port must be active before it starts forwarding traffic.</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-port.lacp">lacp</entry><entry align="left">string</entry><entry align="left"/><entry>LACP mode. One of "active", "off", or "passive".</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-port.name">name</entry><entry align="left">string</entry><entry align="left">ovs-port</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-port.tag">tag</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The VLAN tag in the range 0-4095.</entry></row>
    <row><entry align="left" id="nm-settings.property.ovs-port.vlan-mode">vlan-mode</entry><entry align="left">string</entry><entry align="left"/><entry>The VLAN mode. One of "access", "native-tagged", "native-untagged", "trunk" or unset.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>ppp setting</title><para>Point-to-Point Protocol Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.ppp.baud">baud</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, instruct pppd to set the serial port to the specified baudrate.  This value should normally be left as 0 to automatically choose the speed.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.crtscts">crtscts</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, specify that pppd should set the serial port to use hardware flow control with RTS and CTS signals.  This value should normally be set to FALSE.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.lcp-echo-failure">lcp-echo-failure</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, instruct pppd to presume the connection to the peer has failed if the specified number of LCP echo-requests go unanswered by the peer.  The "lcp-echo-interval" property must also be set to a non-zero value if this property is used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.lcp-echo-interval">lcp-echo-interval</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, instruct pppd to send an LCP echo-request frame to the peer every n seconds (where n is the specified value).  Note that some PPP peers will respond to echo requests and some will not, and it is not possible to autodetect this.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.mppe-stateful">mppe-stateful</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, stateful MPPE is used.  See pppd documentation for more information on stateful MPPE.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.mru">mru</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, instruct pppd to request that the peer send packets no larger than the specified size.  If non-zero, the MRU should be between 128 and 16384.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, instruct pppd to send packets no larger than the specified size.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.name">name</entry><entry align="left">string</entry><entry align="left">ppp</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.no-vj-comp">no-vj-comp</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, Van Jacobsen TCP header compression will not be requested.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.noauth">noauth</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>If TRUE, do not require the other side (usually the PPP server) to authenticate itself to the client.  If FALSE, require authentication from the remote side.  In almost all cases, this should be TRUE.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.nobsdcomp">nobsdcomp</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, BSD compression will not be requested.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.nodeflate">nodeflate</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, "deflate" compression will not be requested.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.refuse-chap">refuse-chap</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, the CHAP authentication method will not be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.refuse-eap">refuse-eap</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, the EAP authentication method will not be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.refuse-mschap">refuse-mschap</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, the MSCHAP authentication method will not be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.refuse-mschapv2">refuse-mschapv2</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, the MSCHAPv2 authentication method will not be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.refuse-pap">refuse-pap</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, the PAP authentication method will not be used.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.require-mppe">require-mppe</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, MPPE (Microsoft Point-to-Point Encryption) will be required for the PPP session.  If either 64-bit or 128-bit MPPE is not available the session will fail.  Note that MPPE is not used on mobile broadband connections.</entry></row>
    <row><entry align="left" id="nm-settings.property.ppp.require-mppe-128">require-mppe-128</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, 128-bit MPPE (Microsoft Point-to-Point Encryption) will be required for the PPP session, and the "require-mppe" property must also be set to TRUE.  If 128-bit MPPE is not available the session will fail.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>pppoe setting</title><para>PPP-over-Ethernet Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.pppoe.name">name</entry><entry align="left">string</entry><entry align="left">pppoe</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.pppoe.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the parent interface name on which this PPPoE connection should be created.  If this property is not specified, the connection is activated on the interface specified in "interface-name" of NMSettingConnection.</entry></row>
    <row><entry align="left" id="nm-settings.property.pppoe.password">password</entry><entry align="left">string</entry><entry align="left"/><entry>Password used to authenticate with the PPPoE service.</entry></row>
    <row><entry align="left" id="nm-settings.property.pppoe.password-flags">password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.pppoe.service">service</entry><entry align="left">string</entry><entry align="left"/><entry>If specified, instruct PPPoE to only initiate sessions with access concentrators that provide the specified service.  For most providers, this should be left blank.  It is only required if there are multiple access concentrators or a specific service is known to be required.</entry></row>
    <row><entry align="left" id="nm-settings.property.pppoe.username">username</entry><entry align="left">string</entry><entry align="left"/><entry>Username used to authenticate with the PPPoE service.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>proxy setting</title><para>WWW Proxy Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.proxy.browser-only">browser-only</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Whether the proxy configuration is for browser only.</entry></row>
    <row><entry align="left" id="nm-settings.property.proxy.method">method</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Method for proxy configuration, Default is NM_SETTING_PROXY_METHOD_NONE (0)</entry></row>
    <row><entry align="left" id="nm-settings.property.proxy.name">name</entry><entry align="left">string</entry><entry align="left">proxy</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.proxy.pac-script">pac-script</entry><entry align="left">string</entry><entry align="left"/><entry>PAC script for the connection.</entry></row>
    <row><entry align="left" id="nm-settings.property.proxy.pac-url">pac-url</entry><entry align="left">string</entry><entry align="left"/><entry>PAC URL for obtaining PAC file.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>serial setting</title><para>Serial Link Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.serial.baud">baud</entry><entry align="left">uint32</entry><entry align="left">57600</entry><entry>Speed to use for communication over the serial port.  Note that this value usually has no effect for mobile broadband modems as they generally ignore speed settings and use the highest available speed.</entry></row>
    <row><entry align="left" id="nm-settings.property.serial.bits">bits</entry><entry align="left">uint32</entry><entry align="left">8</entry><entry>Byte-width of the serial communication. The 8 in "8n1" for example.</entry></row>
    <row><entry align="left" id="nm-settings.property.serial.name">name</entry><entry align="left">string</entry><entry align="left">serial</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.serial.parity">parity</entry><entry align="left">byte</entry><entry align="left"/><entry>The connection parity: 69 (ASCII 'E') for even parity, 111 (ASCII 'o') for odd, 110 (ASCII 'n') for none.</entry></row>
    <row><entry align="left" id="nm-settings.property.serial.send-delay">send-delay</entry><entry align="left">uint64</entry><entry align="left">0</entry><entry>Time to delay between each byte sent to the modem, in microseconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.serial.stopbits">stopbits</entry><entry align="left">uint32</entry><entry align="left">1</entry><entry>Number of stop bits for communication on the serial port.  Either 1 or 2. The 1 in "8n1" for example.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>tc setting</title><para>Linux Traffic Contril Settings..</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.tc.name">name</entry><entry align="left">string</entry><entry align="left">tc</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.tc.qdiscs">qdiscs</entry><entry align="left">array of vardict</entry><entry align="left">[]</entry><entry>Array of TC queuening disciplines.</entry></row>
    <row><entry align="left" id="nm-settings.property.tc.tfilters">tfilters</entry><entry align="left">array of vardict</entry><entry align="left">[]</entry><entry>Array of TC traffic filters.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>team setting</title><para>Teaming Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.team.config">config</entry><entry align="left">string</entry><entry align="left"/><entry>The JSON configuration for the team network interface.  The property should contain raw JSON configuration data suitable for teamd, because the value is passed directly to teamd. If not specified, the default configuration is used.  See man teamd.conf for the format details.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.interface-name">interface-name</entry><entry align="left">string</entry><entry align="left"/><entry>Deprecated in favor of connection.interface-name, but can be used for backward-compatibility with older daemons, to set the team's interface name.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.link-watchers">link-watchers</entry><entry align="left">array of vardict</entry><entry align="left">[]</entry><entry>Link watchers configuration for the connection: each link watcher is defined by a dictionary, whose keys depend upon the selected link watcher. Available link watchers are 'ethtool', 'nsna_ping' and 'arp_ping' and it is specified in the dictionary with the key 'name'. Available keys are:   ethtool: 'delay-up', 'delay-down', 'init-wait'; nsna_ping: 'init-wait', 'interval', 'missed-max', 'target-host'; arp_ping: all the ones in nsna_ping and 'source-host', 'validate-active', 'validate-incative', 'send-always'. See teamd.conf man for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.mcast-rejoin-count">mcast-rejoin-count</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Corresponds to the teamd mcast_rejoin.count.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.mcast-rejoin-interval">mcast-rejoin-interval</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Corresponds to the teamd mcast_rejoin.interval.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.name">name</entry><entry align="left">string</entry><entry align="left">team</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.team.notify-peers-count">notify-peers-count</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Corresponds to the teamd notify_peers.count.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.notify-peers-interval">notify-peers-interval</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Corresponds to the teamd notify_peers.interval.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner">runner</entry><entry align="left">string</entry><entry align="left">"roundrobin"</entry><entry>Corresponds to the teamd runner.name. Permitted values are: "roundrobin", "broadcast", "activebackup", "loadbalance", "lacp". When setting the runner, all the properties specific to the runner will be reset to the default value; all the properties specific to other runners will be set to an empty value (or if not possible to a default value).</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-active">runner-active</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Corresponds to the teamd runner.active.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-agg-select-policy">runner-agg-select-policy</entry><entry align="left">string</entry><entry align="left"/><entry>Corresponds to the teamd runner.agg_select_policy.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-fast-rate">runner-fast-rate</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Corresponds to the teamd runner.fast_rate.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-hwaddr-policy">runner-hwaddr-policy</entry><entry align="left">string</entry><entry align="left"/><entry>Corresponds to the teamd runner.hwaddr_policy.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-min-ports">runner-min-ports</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Corresponds to the teamd runner.min_ports.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-sys-prio">runner-sys-prio</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Corresponds to the teamd runner.sys_prio.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-tx-balancer">runner-tx-balancer</entry><entry align="left">string</entry><entry align="left"/><entry>Corresponds to the teamd runner.tx_balancer.name.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-tx-balancer-interval">runner-tx-balancer-interval</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Corresponds to the teamd runner.tx_balancer.interval.</entry></row>
    <row><entry align="left" id="nm-settings.property.team.runner-tx-hash">runner-tx-hash</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>Corresponds to the teamd runner.tx_hash.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>team-port setting</title><para>Team Port Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.team-port.config">config</entry><entry align="left">string</entry><entry align="left"/><entry>The JSON configuration for the team port. The property should contain raw JSON configuration data suitable for teamd, because the value is passed directly to teamd. If not specified, the default configuration is used. See man teamd.conf for the format details.</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.lacp-key">lacp-key</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Corresponds to the teamd ports.PORTIFNAME.lacp_key.</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.lacp-prio">lacp-prio</entry><entry align="left">int32</entry><entry align="left">255</entry><entry>Corresponds to the teamd ports.PORTIFNAME.lacp_prio.</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.link-watchers">link-watchers</entry><entry align="left">array of vardict</entry><entry align="left">[]</entry><entry>Link watchers configuration for the connection: each link watcher is defined by a dictionary, whose keys depend upon the selected link watcher. Available link watchers are 'ethtool', 'nsna_ping' and 'arp_ping' and it is specified in the dictionary with the key 'name'. Available keys are:   ethtool: 'delay-up', 'delay-down', 'init-wait'; nsna_ping: 'init-wait', 'interval', 'missed-max', 'target-host'; arp_ping: all the ones in nsna_ping and 'source-host', 'validate-active', 'validate-incative', 'send-always'. See teamd.conf man for more details.</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.name">name</entry><entry align="left">string</entry><entry align="left">team-port</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.prio">prio</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Corresponds to the teamd ports.PORTIFNAME.prio.</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.queue-id">queue-id</entry><entry align="left">int32</entry><entry align="left">-1</entry><entry>Corresponds to the teamd ports.PORTIFNAME.queue_id. When set to -1 means the parameter is skipped from the json config.</entry></row>
    <row><entry align="left" id="nm-settings.property.team-port.sticky">sticky</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Corresponds to the teamd ports.PORTIFNAME.sticky.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>tun setting</title><para>Tunnel Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.tun.group">group</entry><entry align="left">string</entry><entry align="left"/><entry>The group ID which will own the device. If set to NULL everyone will be able to use the device.</entry></row>
    <row><entry align="left" id="nm-settings.property.tun.mode">mode</entry><entry align="left">uint32</entry><entry align="left">1</entry><entry>The operating mode of the virtual device. Allowed values are NM_SETTING_TUN_MODE_TUN (1) to create a layer 3 device and NM_SETTING_TUN_MODE_TAP (2) to create an Ethernet-like layer 2 one.</entry></row>
    <row><entry align="left" id="nm-settings.property.tun.multi-queue">multi-queue</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If the property is set to TRUE, the interface will support multiple file descriptors (queues) to parallelize packet sending or receiving. Otherwise, the interface will only support a single queue.</entry></row>
    <row><entry align="left" id="nm-settings.property.tun.name">name</entry><entry align="left">string</entry><entry align="left">tun</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.tun.owner">owner</entry><entry align="left">string</entry><entry align="left"/><entry>The user ID which will own the device. If set to NULL everyone will be able to use the device.</entry></row>
    <row><entry align="left" id="nm-settings.property.tun.pi">pi</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE the interface will prepend a 4 byte header describing the physical interface to the packets.</entry></row>
    <row><entry align="left" id="nm-settings.property.tun.vnet-hdr">vnet-hdr</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE the IFF_VNET_HDR the tunnel packets will include a virtio network header.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>user setting</title><para>General User Profile Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.user.data">data</entry><entry align="left">dict of string to string</entry><entry align="left">{}</entry><entry>A dictionary of key/value pairs with user data. This data is ignored by NetworkManager and can be used at the users discretion. The keys only support a strict ascii format, but the values can be arbitrary UTF8 strings up to a certain length.</entry></row>
    <row><entry align="left" id="nm-settings.property.user.name">name</entry><entry align="left">string</entry><entry align="left">user</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>vlan setting</title><para>VLAN Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.vlan.egress-priority-map">egress-priority-map</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>For outgoing packets, a list of mappings from Linux SKB priorities to 802.1p priorities.  The mapping is given in the format "from:to" where both "from" and "to" are unsigned integers, ie "7:3".</entry></row>
    <row><entry align="left" id="nm-settings.property.vlan.flags">flags</entry><entry align="left">NMVlanFlags (uint32)</entry><entry align="left"/><entry>One or more flags which control the behavior and features of the VLAN interface.  Flags include NM_VLAN_FLAG_REORDER_HEADERS (0x1) (reordering of output packet headers), NM_VLAN_FLAG_GVRP (0x2) (use of the GVRP protocol), and NM_VLAN_FLAG_LOOSE_BINDING (0x4) (loose binding of the interface to its master device's operating state). NM_VLAN_FLAG_MVRP (0x8) (use of the MVRP protocol). The default value of this property is NM_VLAN_FLAG_REORDER_HEADERS, but it used to be 0. To preserve backward compatibility, the default-value in the D-Bus API continues to be 0 and a missing property on D-Bus is still considered as 0.</entry></row>
    <row><entry align="left" id="nm-settings.property.vlan.id">id</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>The VLAN identifier that the interface created by this connection should be assigned. The valid range is from 0 to 4094, without the reserved id 4095.</entry></row>
    <row><entry align="left" id="nm-settings.property.vlan.ingress-priority-map">ingress-priority-map</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>For incoming packets, a list of mappings from 802.1p priorities to Linux SKB priorities.  The mapping is given in the format "from:to" where both "from" and "to" are unsigned integers, ie "7:3".</entry></row>
    <row><entry align="left" id="nm-settings.property.vlan.interface-name">interface-name</entry><entry align="left">string</entry><entry align="left"/><entry>Deprecated in favor of connection.interface-name, but can be used for backward-compatibility with older daemons, to set the vlan's interface name.</entry></row>
    <row><entry align="left" id="nm-settings.property.vlan.name">name</entry><entry align="left">string</entry><entry align="left">vlan</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.vlan.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the parent interface name or parent connection UUID from which this VLAN interface should be created.  If this property is not specified, the connection must contain an "802-3-ethernet" setting with a "mac-address" property.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>vpn setting</title><para>VPN Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.vpn.data">data</entry><entry align="left">dict of string to string</entry><entry align="left">{}</entry><entry>Dictionary of key/value pairs of VPN plugin specific data.  Both keys and values must be strings.</entry></row>
    <row><entry align="left" id="nm-settings.property.vpn.name">name</entry><entry align="left">string</entry><entry align="left">vpn</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.vpn.persistent">persistent</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If the VPN service supports persistence, and this property is TRUE, the VPN will attempt to stay connected across link changes and outages, until explicitly disconnected.</entry></row>
    <row><entry align="left" id="nm-settings.property.vpn.secrets">secrets</entry><entry align="left">dict of string to string</entry><entry align="left">{}</entry><entry>Dictionary of key/value pairs of VPN plugin specific secrets like passwords or private keys.  Both keys and values must be strings.</entry></row>
    <row><entry align="left" id="nm-settings.property.vpn.service-type">service-type</entry><entry align="left">string</entry><entry align="left"/><entry>D-Bus service name of the VPN plugin that this setting uses to connect to its network.  i.e. org.freedesktop.NetworkManager.vpnc for the vpnc plugin.</entry></row>
    <row><entry align="left" id="nm-settings.property.vpn.timeout">timeout</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Timeout for the VPN service to establish the connection. Some services may take quite a long time to connect. Value of 0 means a default timeout, which is 60 seconds (unless overridden by vpn.timeout in configuration file). Values greater than zero mean timeout in seconds.</entry></row>
    <row><entry align="left" id="nm-settings.property.vpn.user-name">user-name</entry><entry align="left">string</entry><entry align="left"/><entry>If the VPN connection requires a user name for authentication, that name should be provided here.  If the connection is available to more than one user, and the VPN requires each user to supply a different name, then leave this property empty.  If this property is empty, NetworkManager will automatically supply the username of the user which requested the VPN connection.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>vxlan setting</title><para>VXLAN Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.vxlan.ageing">ageing</entry><entry align="left">uint32</entry><entry align="left">300</entry><entry>Specifies the lifetime in seconds of FDB entries learnt by the kernel.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.destination-port">destination-port</entry><entry align="left">uint32</entry><entry align="left">8472</entry><entry>Specifies the UDP destination port to communicate to the remote VXLAN tunnel endpoint.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.id">id</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies the VXLAN Network Identifier (or VXLAN Segment Identifier) to use.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.l2-miss">l2-miss</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Specifies whether netlink LL ADDR miss notifications are generated.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.l3-miss">l3-miss</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Specifies whether netlink IP ADDR miss notifications are generated.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.learning">learning</entry><entry align="left">boolean</entry><entry align="left">TRUE</entry><entry>Specifies whether unknown source link layer addresses and IP addresses are entered into the VXLAN device forwarding database.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.limit">limit</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies the maximum number of FDB entries. A value of zero means that the kernel will store unlimited entries.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.local">local</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the source IP address to use in outgoing packets.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.name">name</entry><entry align="left">string</entry><entry align="left">vxlan</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.parent">parent</entry><entry align="left">string</entry><entry align="left"/><entry>If given, specifies the parent interface name or parent connection UUID.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.proxy">proxy</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Specifies whether ARP proxy is turned on.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.remote">remote</entry><entry align="left">string</entry><entry align="left"/><entry>Specifies the unicast destination IP address to use in outgoing packets when the destination link layer address is not known in the VXLAN device forwarding database, or the multicast IP address to join.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.rsc">rsc</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>Specifies whether route short circuit is turned on.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.source-port-max">source-port-max</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies the maximum UDP source port to communicate to the remote VXLAN tunnel endpoint.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.source-port-min">source-port-min</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies the minimum UDP source port to communicate to the remote VXLAN tunnel endpoint.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.tos">tos</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies the TOS value to use in outgoing packets.</entry></row>
    <row><entry align="left" id="nm-settings.property.vxlan.ttl">ttl</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Specifies the time-to-live value to use in outgoing packets.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>wimax setting</title><para>WiMax Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.wimax.mac-address">mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>If specified, this connection will only apply to the WiMAX device whose MAC address matches. This property does not change the MAC address of the device (known as MAC spoofing). Deprecated: 1</entry></row>
    <row><entry align="left" id="nm-settings.property.wimax.name">name</entry><entry align="left">string</entry><entry align="left">wimax</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.wimax.network-name">network-name</entry><entry align="left">string</entry><entry align="left"/><entry>Network Service Provider (NSP) name of the WiMAX network this connection should use. Deprecated: 1</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>802-3-ethernet setting</title><para>Wired Ethernet Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.assigned-mac-address">assigned-mac-address</entry><entry align="left">string</entry><entry align="left"/><entry>The new field for the cloned MAC address. It can be either a hardware address in ASCII representation, or one of the special values "preserve", "permanent", "random" or "stable". This field replaces the deprecated "cloned-mac-address" on D-Bus, which can only contain explict hardware addresses. Note that this property only exists in D-Bus API. libnm and nmcli continue to call this property "cloned-mac-address".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.auto-negotiate">auto-negotiate</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, enforce auto-negotiation of port speed and duplex mode.  If FALSE, "speed" and "duplex" properties should be both set or link configuration will be skipped.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.cloned-mac-address">cloned-mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>This D-Bus field is deprecated in favor of "assigned-mac-address" which is more flexible and allows specifying special variants like "random". For libnm and nmcli, this field is called "cloned-mac-address".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.duplex">duplex</entry><entry align="left">string</entry><entry align="left"/><entry>Can be specified only when "auto-negotiate" is "off". In that case, statically configures the device to use that specified duplex mode, either "half" or "full". Must be set together with the "speed" property if specified. Before specifying a duplex mode be sure your device supports it.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.generate-mac-address-mask">generate-mac-address-mask</entry><entry align="left">string</entry><entry align="left"/><entry>With "cloned-mac-address" setting "random" or "stable", by default all bits of the MAC address are scrambled and a locally-administered, unicast MAC address is created. This property allows to specify that certain bits are fixed. Note that the least significant bit of the first MAC address will always be unset to create a unicast MAC address. If the property is NULL, it is eligible to be overwritten by a default connection setting. If the value is still NULL or an empty string, the default is to create a locally-administered, unicast MAC address. If the value contains one MAC address, this address is used as mask. The set bits of the mask are to be filled with the current MAC address of the device, while the unset bits are subject to randomization. Setting "FE:FF:FF:00:00:00" means to preserve the OUI of the current MAC address and only randomize the lower 3 bytes using the "random" or "stable" algorithm. If the value contains one additional MAC address after the mask, this address is used instead of the current MAC address to fill the bits that shall not be randomized. For example, a value of "FE:FF:FF:00:00:00 68:F7:28:00:00:00" will set the OUI of the MAC address to 68:F7:28, while the lower bits are randomized. A value of "02:00:00:00:00:00 00:00:00:00:00:00" will create a fully scrambled globally-administered, burned-in MAC address. If the value contains more than one additional MAC addresses, one of them is chosen randomly. For example, "02:00:00:00:00:00 00:00:00:00:00:00 02:00:00:00:00:00" will create a fully scrambled MAC address, randomly locally or globally administered.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.mac-address">mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>If specified, this connection will only apply to the Ethernet device whose permanent MAC address matches. This property does not change the MAC address of the device (i.e. MAC spoofing).</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.mac-address-blacklist">mac-address-blacklist</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>If specified, this connection will never apply to the Ethernet device whose permanent MAC address matches an address in the list.  Each MAC address is in the standard hex-digits-and-colons notation (00:11:22:33:44:55).</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, only transmit packets of the specified size or smaller, breaking larger packets up into multiple Ethernet frames.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.name">name</entry><entry align="left">string</entry><entry align="left">802-3-ethernet</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.port">port</entry><entry align="left">string</entry><entry align="left"/><entry>Specific port type to use if the device supports multiple attachment methods.  One of "tp" (Twisted Pair), "aui" (Attachment Unit Interface), "bnc" (Thin Ethernet) or "mii" (Media Independent Interface). If the device supports only one port type, this setting is ignored.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.s390-nettype">s390-nettype</entry><entry align="left">string</entry><entry align="left"/><entry>s390 network device type; one of "qeth", "lcs", or "ctc", representing the different types of virtual network devices available on s390 systems.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.s390-options">s390-options</entry><entry align="left">dict of string to string</entry><entry align="left">{}</entry><entry>Dictionary of key/value pairs of s390-specific device options.  Both keys and values must be strings.  Allowed keys include "portno", "layer2", "portname", "protocol", among others.  Key names must contain only alphanumeric characters (ie, [a-zA-Z0-9]).</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.s390-subchannels">s390-subchannels</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>Identifies specific subchannels that this network device uses for communication with z/VM or s390 host.  Like the "mac-address" property for non-z/VM devices, this property can be used to ensure this connection only applies to the network device that uses these subchannels.  The list should contain exactly 3 strings, and each string may only be composed of hexadecimal characters and the period (.) character.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.speed">speed</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Can be set to a value greater than zero only when "auto-negotiate" is "off". In that case, statically configures the device to use that specified speed. In Mbit/s, ie 100 == 100Mbit/s. Must be set together with the "duplex" property when non-zero. Before specifying a speed value be sure your device supports it.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.wake-on-lan">wake-on-lan</entry><entry align="left">uint32</entry><entry align="left">1</entry><entry>The NMSettingWiredWakeOnLan options to enable. Not all devices support all options. May be any combination of NM_SETTING_WIRED_WAKE_ON_LAN_PHY (0x2), NM_SETTING_WIRED_WAKE_ON_LAN_UNICAST (0x4), NM_SETTING_WIRED_WAKE_ON_LAN_MULTICAST (0x8), NM_SETTING_WIRED_WAKE_ON_LAN_BROADCAST (0x10), NM_SETTING_WIRED_WAKE_ON_LAN_ARP (0x20), NM_SETTING_WIRED_WAKE_ON_LAN_MAGIC (0x40) or the special values NM_SETTING_WIRED_WAKE_ON_LAN_DEFAULT (0x1) (to use global settings) and NM_SETTING_WIRED_WAKE_ON_LAN_IGNORE (0x8000) (to disable management of Wake-on-LAN in NetworkManager).</entry></row>
    <row><entry align="left" id="nm-settings.property.802-3-ethernet.wake-on-lan-password">wake-on-lan-password</entry><entry align="left">string</entry><entry align="left"/><entry>If specified, the password used with magic-packet-based Wake-on-LAN, represented as an Ethernet MAC address.  If NULL, no password will be required.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>802-11-wireless setting</title><para>Wi-Fi Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.assigned-mac-address">assigned-mac-address</entry><entry align="left">string</entry><entry align="left"/><entry>The new field for the cloned MAC address. It can be either a hardware address in ASCII representation, or one of the special values "preserve", "permanent", "random" or "stable". This field replaces the deprecated "cloned-mac-address" on D-Bus, which can only contain explict hardware addresses. Note that this property only exists in D-Bus API. libnm and nmcli continue to call this property "cloned-mac-address".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.band">band</entry><entry align="left">string</entry><entry align="left"/><entry>802.11 frequency band of the network.  One of "a" for 5GHz 802.11a or "bg" for 2.4GHz 802.11.  This will lock associations to the Wi-Fi network to the specific band, i.e. if "a" is specified, the device will not associate with the same network in the 2.4GHz band even if the network's settings are compatible.  This setting depends on specific driver capability and may not work with all drivers.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.bssid">bssid</entry><entry align="left">byte array</entry><entry align="left"/><entry>If specified, directs the device to only associate with the given access point.  This capability is highly driver dependent and not supported by all devices.  Note: this property does not control the BSSID used when creating an Ad-Hoc network and is unlikely to in the future.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.channel">channel</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Wireless channel to use for the Wi-Fi connection.  The device will only join (or create for Ad-Hoc networks) a Wi-Fi network on the specified channel.  Because channel numbers overlap between bands, this property also requires the "band" property to be set.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.cloned-mac-address">cloned-mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>This D-Bus field is deprecated in favor of "assigned-mac-address" which is more flexible and allows specifying special variants like "random". For libnm and nmcli, this field is called "cloned-mac-address".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.generate-mac-address-mask">generate-mac-address-mask</entry><entry align="left">string</entry><entry align="left"/><entry>With "cloned-mac-address" setting "random" or "stable", by default all bits of the MAC address are scrambled and a locally-administered, unicast MAC address is created. This property allows to specify that certain bits are fixed. Note that the least significant bit of the first MAC address will always be unset to create a unicast MAC address. If the property is NULL, it is eligible to be overwritten by a default connection setting. If the value is still NULL or an empty string, the default is to create a locally-administered, unicast MAC address. If the value contains one MAC address, this address is used as mask. The set bits of the mask are to be filled with the current MAC address of the device, while the unset bits are subject to randomization. Setting "FE:FF:FF:00:00:00" means to preserve the OUI of the current MAC address and only randomize the lower 3 bytes using the "random" or "stable" algorithm. If the value contains one additional MAC address after the mask, this address is used instead of the current MAC address to fill the bits that shall not be randomized. For example, a value of "FE:FF:FF:00:00:00 68:F7:28:00:00:00" will set the OUI of the MAC address to 68:F7:28, while the lower bits are randomized. A value of "02:00:00:00:00:00 00:00:00:00:00:00" will create a fully scrambled globally-administered, burned-in MAC address. If the value contains more than one additional MAC addresses, one of them is chosen randomly. For example, "02:00:00:00:00:00 00:00:00:00:00:00 02:00:00:00:00:00" will create a fully scrambled MAC address, randomly locally or globally administered.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.hidden">hidden</entry><entry align="left">boolean</entry><entry align="left">FALSE</entry><entry>If TRUE, indicates this network is a non-broadcasting network that hides its SSID.  In this case various workarounds may take place, such as probe-scanning the SSID for more reliable network discovery.  However, these workarounds expose inherent insecurities with hidden SSID networks, and thus hidden SSID networks should be used with caution.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.mac-address">mac-address</entry><entry align="left">byte array</entry><entry align="left"/><entry>If specified, this connection will only apply to the Wi-Fi device whose permanent MAC address matches. This property does not change the MAC address of the device (i.e. MAC spoofing).</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.mac-address-blacklist">mac-address-blacklist</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>A list of permanent MAC addresses of Wi-Fi devices to which this connection should never apply.  Each MAC address should be given in the standard hex-digits-and-colons notation (eg "00:11:22:33:44:55").</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.mac-address-randomization">mac-address-randomization</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>One of NM_SETTING_MAC_RANDOMIZATION_DEFAULT (0) (never randomize unless the user has set a global default to randomize and the supplicant supports randomization),  NM_SETTING_MAC_RANDOMIZATION_NEVER (1) (never randomize the MAC address), or NM_SETTING_MAC_RANDOMIZATION_ALWAYS (2) (always randomize the MAC address). This property is deprecated for 'cloned-mac-address'. Deprecated: 1</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.mode">mode</entry><entry align="left">string</entry><entry align="left"/><entry>Wi-Fi network mode; one of "infrastructure", "adhoc" or "ap".  If blank, infrastructure is assumed.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.mtu">mtu</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, only transmit packets of the specified size or smaller, breaking larger packets up into multiple Ethernet frames.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.name">name</entry><entry align="left">string</entry><entry align="left">802-11-wireless</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.powersave">powersave</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>One of NM_SETTING_WIRELESS_POWERSAVE_DISABLE (2) (disable Wi-Fi power saving), NM_SETTING_WIRELESS_POWERSAVE_ENABLE (3) (enable Wi-Fi power saving), NM_SETTING_WIRELESS_POWERSAVE_IGNORE (1) (don't touch currently configure setting) or NM_SETTING_WIRELESS_POWERSAVE_DEFAULT (0) (use the globally configured value). All other values are reserved.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.rate">rate</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, directs the device to only use the specified bitrate for communication with the access point.  Units are in Kb/s, ie 5500 = 5.5 Mbit/s.  This property is highly driver dependent and not all devices support setting a static bitrate.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.security">security</entry><entry align="left">None</entry><entry align="left"/><entry>This property is deprecated, but can be set to the value '802-11-wireless-security' when a wireless security setting is also present in the connection dictionary, for compatibility with very old NetworkManager daemons.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.seen-bssids">seen-bssids</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>A list of BSSIDs (each BSSID formatted as a MAC address like "00:11:22:33:44:55") that have been detected as part of the Wi-Fi network.  NetworkManager internally tracks previously seen BSSIDs. The property is only meant for reading and reflects the BSSID list of NetworkManager. The changes you make to this property will not be preserved.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.ssid">ssid</entry><entry align="left">byte array</entry><entry align="left"/><entry>SSID of the Wi-Fi network. Must be specified.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless.tx-power">tx-power</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>If non-zero, directs the device to use the specified transmit power. Units are dBm.  This property is highly driver dependent and not all devices support setting a static transmit power.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
  <refsect2><title>802-11-wireless-security setting</title><para>Wi-Fi Security Settings.</para><informaltable><tgroup cols="4"><thead><row><entry>Key Name</entry><entry>Value Type</entry><entry>Default Value</entry><entry>Value Description</entry></row></thead><tbody>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.auth-alg">auth-alg</entry><entry align="left">string</entry><entry align="left"/><entry>When WEP is used (ie, key-mgmt = "none" or "ieee8021x") indicate the 802.11 authentication algorithm required by the AP here.  One of "open" for Open System, "shared" for Shared Key, or "leap" for Cisco LEAP.  When using Cisco LEAP (ie, key-mgmt = "ieee8021x" and auth-alg = "leap") the "leap-username" and "leap-password" properties must be specified.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.group">group</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>A list of group/broadcast encryption algorithms which prevents connections to Wi-Fi networks that do not utilize one of the algorithms in the list.  For maximum compatibility leave this property empty.  Each list element may be one of "wep40", "wep104", "tkip", or "ccmp".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.key-mgmt">key-mgmt</entry><entry align="left">string</entry><entry align="left"/><entry>Key management used for the connection.  One of "none" (WEP), "ieee8021x" (Dynamic WEP), "wpa-none" (Ad-Hoc WPA-PSK), "wpa-psk" (infrastructure WPA-PSK), or "wpa-eap" (WPA-Enterprise).  This property must be set for any Wi-Fi connection that uses security.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.leap-password">leap-password</entry><entry align="left">string</entry><entry align="left"/><entry>The login password for legacy LEAP connections (ie, key-mgmt = "ieee8021x" and auth-alg = "leap").</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.leap-password-flags">leap-password-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "leap-password" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.leap-username">leap-username</entry><entry align="left">string</entry><entry align="left"/><entry>The login username for legacy LEAP connections (ie, key-mgmt = "ieee8021x" and auth-alg = "leap").</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.name">name</entry><entry align="left">string</entry><entry align="left">802-11-wireless-security</entry><entry>The setting's name, which uniquely identifies the setting within the connection.  Each setting type has a name unique to that type, for example "ppp" or "wireless" or "wired".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.pairwise">pairwise</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>A list of pairwise encryption algorithms which prevents connections to Wi-Fi networks that do not utilize one of the algorithms in the list. For maximum compatibility leave this property empty.  Each list element may be one of "tkip" or "ccmp".</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.pmf">pmf</entry><entry align="left">int32</entry><entry align="left">0</entry><entry>Indicates whether Protected Management Frames (802.11w) must be enabled for the connection.  One of NM_SETTING_WIRELESS_SECURITY_PMF_DEFAULT (0) (use global default value), NM_SETTING_WIRELESS_SECURITY_PMF_DISABLE (1) (disable PMF), NM_SETTING_WIRELESS_SECURITY_PMF_OPTIONAL (2) (enable PMF if the supplicant and the access point support it) or NM_SETTING_WIRELESS_SECURITY_PMF_REQUIRED (3) (enable PMF and fail if not supported).  When set to NM_SETTING_WIRELESS_SECURITY_PMF_DEFAULT (0) and no global default is set, PMF will be optionally enabled.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.proto">proto</entry><entry align="left">array of string</entry><entry align="left">[]</entry><entry>List of strings specifying the allowed WPA protocol versions to use. Each element may be one "wpa" (allow WPA) or "rsn" (allow WPA2/RSN).  If not specified, both WPA and RSN connections are allowed.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.psk">psk</entry><entry align="left">string</entry><entry align="left"/><entry>Pre-Shared-Key for WPA networks.  If the key is 64-characters long, it must contain only hexadecimal characters and is interpreted as a hexadecimal WPA key.  Otherwise, the key must be between 8 and 63 ASCII characters (as specified in the 802.11i standard) and is interpreted as a WPA passphrase, and is hashed to derive the actual WPA-PSK used when connecting to the Wi-Fi network.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.psk-flags">psk-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "psk" property. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-key-flags">wep-key-flags</entry><entry align="left">NMSettingSecretFlags (uint32)</entry><entry align="left"/><entry>Flags indicating how to handle the "wep-key0", "wep-key1", "wep-key2", and "wep-key3" properties. (see <xref linkend="secrets-flags"/> for flag values)</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-key-type">wep-key-type</entry><entry align="left">NMWepKeyType (uint32)</entry><entry align="left"/><entry>Controls the interpretation of WEP keys.  Allowed values are NM_WEP_KEY_TYPE_KEY (1), in which case the key is either a 10- or 26-character hexadecimal string, or a 5- or 13-character ASCII password; or NM_WEP_KEY_TYPE_PASSPHRASE (2), in which case the passphrase is provided as a string and will be hashed using the de-facto MD5 method to derive the actual WEP key.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-key0">wep-key0</entry><entry align="left">string</entry><entry align="left"/><entry>Index 0 WEP key.  This is the WEP key used in most networks.  See the "wep-key-type" property for a description of how this key is interpreted.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-key1">wep-key1</entry><entry align="left">string</entry><entry align="left"/><entry>Index 1 WEP key.  This WEP index is not used by most networks.  See the "wep-key-type" property for a description of how this key is interpreted.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-key2">wep-key2</entry><entry align="left">string</entry><entry align="left"/><entry>Index 2 WEP key.  This WEP index is not used by most networks.  See the "wep-key-type" property for a description of how this key is interpreted.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-key3">wep-key3</entry><entry align="left">string</entry><entry align="left"/><entry>Index 3 WEP key.  This WEP index is not used by most networks.  See the "wep-key-type" property for a description of how this key is interpreted.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wep-tx-keyidx">wep-tx-keyidx</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>When static WEP is used (ie, key-mgmt = "none") and a non-default WEP key index is used by the AP, put that WEP key index here.  Valid values are 0 (default key) through 3.  Note that some consumer access points (like the Linksys WRT54G) number the keys 1 - 4.</entry></row>
    <row><entry align="left" id="nm-settings.property.802-11-wireless-security.wps-method">wps-method</entry><entry align="left">uint32</entry><entry align="left">0</entry><entry>Flags indicating which mode of WPS is to be used if any. There's little point in changing the default setting as NetworkManager will automatically determine whether it's feasible to start WPS enrollment from the Access Point capabilities. WPS can be disabled by setting this property to a value of 1.</entry></row>
  </tbody></tgroup></informaltable></refsect2>
<refsect2 id="secrets-flags"><title>Secret flag types:</title><para>
            Each password or secret property in a setting has an associated <emphasis>flags</emphasis> property
            that describes how to handle that secret. The <emphasis>flags</emphasis> property is a bitfield
            that contains zero or more of the following values logically OR-ed together.
          </para><itemizedlist><listitem><para>0x0 (none) - the system is responsible for providing and storing this secret. This
              may be required so that secrets are already available before the user logs in.
              It also commonly means that the secret will be stored in plain text on disk, accessible
              to root only. For example via the keyfile settings plugin as described in the "PLUGINS" section
              in <link linkend="NetworkManager.conf"><citerefentry><refentrytitle>NetworkManager.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry></link>.
              </para></listitem><listitem><para>0x1 (agent-owned) - a user-session secret agent is responsible for providing and storing
              this secret; when it is required, agents will be asked to provide it.</para></listitem><listitem><para>0x2 (not-saved) - this secret should not be saved but should be requested from the user
              each time it is required. This flag should be used for One-Time-Pad secrets, PIN codes from hardware tokens,
              or if the user simply does not want to save the secret.</para></listitem><listitem><para>0x4 (not-required) - in some situations it cannot be automatically determined that a secret
              is required or not. This flag hints that the secret is not required and should not be requested from the user.</para></listitem></itemizedlist></refsect2></refsect1><refsect1 id="files"><title>Files</title><para><filename>/etc/NetworkManager/system-connections</filename> or distro plugin-specific location</para></refsect1><refsect1 id="see_also"><title>See Also</title><para><link linkend="NetworkManager"><citerefentry><refentrytitle>NetworkManager</refentrytitle><manvolnum>8</manvolnum></citerefentry></link>,
        <link linkend="nmcli"><citerefentry><refentrytitle>nmcli</refentrytitle><manvolnum>1</manvolnum></citerefentry></link>,
        <link linkend="nmcli-examples"><citerefentry><refentrytitle>nmcli-examples</refentrytitle><manvolnum>7</manvolnum></citerefentry></link>,
        <link linkend="NetworkManager.conf"><citerefentry><refentrytitle>NetworkManager.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry></link></para></refsect1></refentry>
