


/* Generated by glib-mkenums. Do not edit */

#ifndef __NM_ENUM_TYPES_H__
#define __NM_ENUM_TYPES_H__

#include <glib-object.h>

G_BEGIN_DECLS
GType nm_device_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_ERROR (nm_device_error_get_type ())
GType nm_unmanaged_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_UNMANAGED_FLAGS (nm_unmanaged_flags_get_type ())
GType nm_bond_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_BOND_ERROR (nm_bond_error_get_type ())
GType nm_bridge_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_BRIDGE_ERROR (nm_bridge_error_get_type ())
GType nm_ethernet_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_ETHERNET_ERROR (nm_ethernet_error_get_type ())
GType nm_device_generic_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_GENERIC_ERROR (nm_device_generic_error_get_type ())
GType nm_infiniband_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_INFINIBAND_ERROR (nm_infiniband_error_get_type ())
GType nm_team_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_TEAM_ERROR (nm_team_error_get_type ())
GType nm_vlan_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VLAN_ERROR (nm_vlan_error_get_type ())
GType nm_dhcp_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DHCP_STATE (nm_dhcp_state_get_type ())
GType nm_dhcp_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DHCP_MANAGER_ERROR (nm_dhcp_manager_error_get_type ())
GType nm_dns_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DNS_MANAGER_ERROR (nm_dns_manager_error_get_type ())
GType nm_dns_ip_config_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DNS_IP_CONFIG_TYPE (nm_dns_ip_config_type_get_type ())
GType nm_dns_manager_resolv_conf_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DNS_MANAGER_RESOLV_CONF_MODE (nm_dns_manager_resolv_conf_mode_get_type ())
GType nm_dns_masq_status_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DNS_MASQ_STATUS (nm_dns_masq_status_get_type ())
GType nm_logging_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_LOGGING_ERROR (nm_logging_error_get_type ())
GType nm_platform_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_PLATFORM_ERROR (nm_platform_error_get_type ())
GType nm_platform_reason_get_type (void) G_GNUC_CONST;
#define NM_TYPE_PLATFORM_REASON (nm_platform_reason_get_type ())
GType nm_link_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_LINK_TYPE (nm_link_type_get_type ())
GType nm_platform_signal_change_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_PLATFORM_SIGNAL_CHANGE_TYPE (nm_platform_signal_change_type_get_type ())
GType nm_platform_source_get_type (void) G_GNUC_CONST;
#define NM_TYPE_PLATFORM_SOURCE (nm_platform_source_get_type ())
GType nm_rdisc_dhcp_level_get_type (void) G_GNUC_CONST;
#define NM_TYPE_RDISC_DHCP_LEVEL (nm_rdisc_dhcp_level_get_type ())
GType nm_rdisc_preference_get_type (void) G_GNUC_CONST;
#define NM_TYPE_RDISC_PREFERENCE (nm_rdisc_preference_get_type ())
GType nm_rdisc_config_map_get_type (void) G_GNUC_CONST;
#define NM_TYPE_RDISC_CONFIG_MAP (nm_rdisc_config_map_get_type ())
GType nm_ppp_status_get_type (void) G_GNUC_CONST;
#define NM_TYPE_PPP_STATUS (nm_ppp_status_get_type ())
GType nm_agent_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_AGENT_MANAGER_ERROR (nm_agent_manager_error_get_type ())
GType nm_secret_agent_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SECRET_AGENT_CAPABILITIES (nm_secret_agent_capabilities_get_type ())
GType nm_settings_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTINGS_ERROR (nm_settings_error_get_type ())
GType nm_system_config_interface_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SYSTEM_CONFIG_INTERFACE_CAPABILITIES (nm_system_config_interface_capabilities_get_type ())
GType nm_system_config_interface_prop_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SYSTEM_CONFIG_INTERFACE_PROP (nm_system_config_interface_prop_get_type ())
GType nm_ap_support_get_type (void) G_GNUC_CONST;
#define NM_TYPE_AP_SUPPORT (nm_ap_support_get_type ())
GType nm_opt_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_OPT_TYPE (nm_opt_type_get_type ())
GType nm_vpn_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_MANAGER_ERROR (nm_vpn_manager_error_get_type ())
GType nm_dcb_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DCB_ERROR (nm_dcb_error_get_type ())
GType nm_dispatcher_action_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DISPATCHER_ACTION (nm_dispatcher_action_get_type ())
GType nm_auth_call_result_get_type (void) G_GNUC_CONST;
#define NM_TYPE_AUTH_CALL_RESULT (nm_auth_call_result_get_type ())
GType nm_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_MANAGER_ERROR (nm_manager_error_get_type ())
GType nm_rf_kill_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_RF_KILL_STATE (nm_rf_kill_state_get_type ())
GType nm_rf_kill_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_RF_KILL_TYPE (nm_rf_kill_type_get_type ())
GType nm_session_monitor_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SESSION_MONITOR_ERROR (nm_session_monitor_error_get_type ())
GType nm_wimax_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_WIMAX_ERROR (nm_wimax_error_get_type ())
G_END_DECLS

#endif /* __NM_ENUM_TYPES_H__ */



